{"version":3,"sources":["components/Gaigel/Header.tsx","components/Gaigel/HelpButton.tsx","components/Gaigel/LandingPage.tsx","components/Gaigel/Talon.tsx","components/Gaigel/GaigelCard.tsx","components/Gaigel/TrumpCard.tsx","components/Gaigel/PlayedCards.tsx","components/Gaigel/YourCards.tsx","components/Gaigel/Opening.tsx","components/Gaigel/LobbyPage.tsx","components/Gaigel/PlayerList.tsx","components/Gaigel/GameInformation.tsx","components/Gaigel/Popup.tsx","components/Gaigel/EndPopup.tsx","components/Gaigel/Actions.tsx","components/Gaigel/OpeningInstructions.tsx","components/Gaigel/InstructionPages/InstructionPage.tsx","components/Gaigel/InstructionPages/FirstInstructionPage.tsx","components/Gaigel/Instructions.tsx","components/Gaigel/Gaigel.tsx","App.tsx","GlobalStyle.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","breakpoints","up","marginLeft","marginRight","gap","logo","width","Header","classes","useTheme","matches","useMediaQuery","Box","className","src","alt","Typography","align","variant","style","fontWeight","backgroundColor","boxShadow","HelpButton","toggleShowInstructions","invisible","Fab","size","onClick","disabled","opacity","fontSize","down","maxWidth","textField","borderRadius","controllContainer","display","justifyContent","alignContent","alignItems","LandingPage","login","useState","username","setUsername","lobbycode","setLobbycode","handleLogin","useEffect","listener","event","code","document","addEventListener","removeEventListener","TextField","color","autoFocus","label","onChange","target","value","inputProps","maxLength","helperText","Button","flexDirection","cardActionArea","height","paper","counter","header","Talon","cardsLeft","drawCard","Grid","item","Paper","CardActionArea","padding","position","zIndex","winAnimation","content","background","animation","inset","card","symbolRow","GaigelCard","type","clickable","playCard","hidden","highlighted","keepHighlighting","symbolMap","iconSize","pointerEvents","border","lightFontWeigth","TrumpCard","trumpCard","openingName","startHighlighting","setHighlight","setTimeout","PlayedCards","playedCards","playerCount","opening","highlightedCardIndex","i","Array","fill","cards","setCards","tempCards","slice","length","push","container","spacing","map","cardContainer","turnAnimation","cardsButtonContainer","YourCards","userCards","ownSocketId","playerWithTurnSocketId","newCard","showEndPopup","filledUserCards","q","splice","indexOfNewCard","forEach","index","currentClickable","highlightCard","right","flex","textAlign","headerBox","instructions","buttonContainer","button","Opening","GeElfen","AndereAlteHat","HöherHat","AufDissle","handleClick","canPlayAndereAlte","hover","canPlayGeElfen","canPlayHöherHat","IconButton","control","playerList","marginTop","playerInformation","lighterFontWeight","readyButton","LobbyPage","backToLogin","amountReadyPlayers","getReady","ready","setReady","player","winString","wins","key","Math","random","minWidth","flexWrap","nameContainer","name","paddingTop","paddingBottom","PlayerList","order","playerWithTurn","highlightedPlayer","turn","socketId","element","score","GameInformation","floor","alert","Popup","snackbarType","detail","reset","message","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","transitionDuration","Alert","severity","top","left","transform","rankingHeaderContainer","rankingHeader","rankingContainer","rankingElement","rankingElementText","footer","EndPopup","endInformation","backToLobby","lostAufDissle","losingPlayer","showRanking","setShowRanking","setCounter","finalSorting","setFinalSorting","sortedByScore","sort","player1","player2","sortedByWins","toggleShowRanking","decreaseCounter","newCounter","Card","startIcon","noWrap","callButton","callButtonContainer","announcingAnimation","Actions","canCall","announcing","melden","canSteal","rauben","headerButton","closeButton","OpeningInstructions","setClickedOpening","currentPage","setCurrentPage","MobileStepper","steps","activeStep","backButton","nextButton","paragraph","InstructionPage","page","title","paragraphes","exampleCard","listContainer","listItem","listItemText","FirstInstructionPage","currentCard","setCurrentCard","cardValues","cardTypes","randomTypeIndex","valueIndex","findIndex","loopThroughCardValues","Instructions","pages","amountOfPages","paddingLeft","paddingRight","openingInstructions","talonAndTrump","Gaigel","loggedIn","setLoggedIn","gameStarted","setGameStarted","showInstructions","setShowInstructions","ownUsername","setOwnUsername","setOwnSocketId","setScore","lobbyInformation","setLobbyInformation","setOrder","setPlayerWithTurn","setOpening","currentOpening","setCurrentOpening","setOpeningName","socket","setSocket","setCanCall","setAnnouncing","setCanSteal","setShowEndPopup","setEndInformation","setHighlightedCardIndex","setHighlightedPlayer","talonCards","setTalonCards","setTrumpCard","setPlayedCards","yourCards","setYourCards","warningType","setWarningType","infoType","setInfoType","clickedOpening","setLostAufDissle","setLosingPlayer","setCanPlayAndereAlte","setCanPlayGeElfen","setCanPlayHöherHat","setNewcard","console","log","playerHasAce","filter","hasNonTrumpNonAceCard","newSocket","socketIOClient","on","data","close","emit","playedCard","reason","App","GlobalStyle","createGlobalStyle","createTheme","palette","primary","main","secondary","default","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.9f882cfd.chunk.js","sourcesContent":["import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                marginLeft: 120,\r\n                marginRight: 120,\r\n            },\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                gap: \"30px\",\r\n            },\r\n\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n        logo: {\r\n            width: \"50px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                width: \"60px\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {}\r\n\r\nconst Header: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <img src={\"/Header_symbols.png\"} className={classes.logo} alt=\"\" />\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h3\" : \"h4\"}\r\n                    style={{ fontWeight: \"lighter\" }}\r\n                >\r\n                    Gaigel\r\n                </Typography>\r\n                <img src={\"/Header_symbols_mirror.png\"} className={classes.logo} alt=\"\" />\r\n            </Box>\r\n\r\n            <hr style={{ width: \"100%\" }} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n// This is the old import for the icons\r\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            // zIndex: 100,\r\n            backgroundColor: \"#fafafa\",\r\n            boxShadow: \"4px 4px 15px #444\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    toggleShowInstructions: () => void;\r\n    invisible?: boolean;\r\n}\r\n\r\nconst HelpButton: React.FC<Props> = ({ toggleShowInstructions, invisible = false }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Fab\r\n            size={matches ? \"medium\" : \"small\"}\r\n            className={classes.root}\r\n            onClick={toggleShowInstructions}\r\n            disabled={invisible}\r\n            style={invisible ? { opacity: 0 } : {}}\r\n        >\r\n            <QuestionMarkIcon fontSize={matches ? \"medium\" : \"small\"} />\r\n        </Fab>\r\n    );\r\n};\r\n\r\nexport default HelpButton;\r\n","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { Button, TextField, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport Header from \"./Header\";\r\nimport HelpButton from \"./HelpButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                maxWidth: \"420px\",\r\n            },\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                maxWidth: \"800px\",\r\n            },\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            backgroundColor: \"#ffffff\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        textField: {\r\n            width: \"100%\",\r\n            backgroundColor: \"#ffffff\",\r\n            borderRadius: 4,\r\n        },\r\n        controllContainer: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"0px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    login: (username: string, lobbycode: string) => void;\r\n    toggleShowInstructions: () => void;\r\n}\r\n\r\nconst LandingPage: React.FC<Props> = ({ login, toggleShowInstructions }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [lobbycode, setLobbycode] = useState<string>(\"\");\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setUsername(event.target.value as string);\r\n    };\r\n\r\n    const handleLobbycodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setLobbycode(event.target.value as string);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        if (username !== \"\" && lobbycode !== \"\") {\r\n            login(username, lobbycode);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const listener = (event: any) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                handleLogin();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Header />\r\n\r\n            <Typography\r\n                align=\"center\"\r\n                variant={matches ? \"h5\" : \"h6\"}\r\n                style={{ maxWidth: \"35ch\", fontWeight: \"lighter\" }}\r\n            >\r\n                Entscheide dich für einen Nutzernamen und tritt einer Lobby bei!\r\n            </Typography>\r\n\r\n            <TextField\r\n                className={classes.textField}\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"outlined\"\r\n                label=\"Nutzername\"\r\n                onChange={handleUsernameChange}\r\n                inputProps={{ maxLength: 10 }}\r\n            />\r\n\r\n            <TextField\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                label=\"Lobbycode\"\r\n                onChange={handleLobbycodeChange}\r\n                inputProps={{ maxLength: 10 }}\r\n                helperText=\"Tipp: Bei einem bisher nicht verwendeten Lobbycode wird automatisch eine neue Lobby\r\n                erstellt.\"\r\n            />\r\n\r\n            <Box className={classes.controllContainer}>\r\n                <Button\r\n                    disabled={username === \"\" || lobbycode === \"\" ? true : false}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"large\" : \"medium\"}\r\n                    onClick={handleLogin}\r\n                    style={{ width: \"80%\" }}\r\n                >\r\n                    Beitreten\r\n                </Button>\r\n                <HelpButton toggleShowInstructions={toggleShowInstructions} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Grid, Paper, CardActionArea, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        cardActionArea: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        paper: {\r\n            width: 40,\r\n            height: 60,\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                width: 50,\r\n                height: 75,\r\n            },\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"none\",\r\n        },\r\n        counter: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    cardsLeft: number;\r\n    drawCard: (amount: number) => void;\r\n}\r\n\r\nconst Talon: React.FC<Props> = ({ cardsLeft, drawCard }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Grid item className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Talon\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n                <CardActionArea\r\n                    className={classes.cardActionArea}\r\n                    onClick={() => {\r\n                        drawCard(1);\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={\"/cardBacksite_noSpaceAround_n1.png\"}\r\n                        width={matches ? \"50\" : \"40\"}\r\n                        height={matches ? \"75\" : \"60\"}\r\n                        alt=\"\"\r\n                    />\r\n                </CardActionArea>\r\n            </Paper>\r\n            <Typography variant={matches ? \"body1\" : \"subtitle2\"} className={classes.counter}>\r\n                Karten: {cardsLeft}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Talon;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Paper, Box, Typography, CardActionArea } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: 4,\r\n            position: \"relative\",\r\n            zIndex: 10,\r\n            width: 44,\r\n            height: 64,\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                width: 54,\r\n                height: 79,\r\n            },\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            boxShadow: \"none\",\r\n        },\r\n        winAnimation: {\r\n            \"&::before\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                background: \"radial-gradient(#ffffff,#265802)\",\r\n                animation: `$pulsate 1500ms 3`,\r\n                borderRadius: \"4px\",\r\n            },\r\n            \"&::after\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                background: \"white\",\r\n                inset: \"4px\",\r\n                borderRadius: \"4px\",\r\n            },\r\n        },\r\n        \"@keyframes pulsate\": {\r\n            \"0%\": {\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                opacity: 2,\r\n            },\r\n            \"100%\": {\r\n                width: \"calc(100% + 4px)\",\r\n                height: \"calc(100% + 4px)\",\r\n                opacity: 0,\r\n            },\r\n        },\r\n\r\n        cardActionArea: {\r\n            zIndex: 20,\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            borderRadius: 4,\r\n            boxShadow:\r\n                \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n        },\r\n        card: {\r\n            zIndex: 20,\r\n            height: \"100%\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                height: \"95%\",\r\n            },\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        symbolRow: {\r\n            width: \"85%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    type: string;\r\n    value: string;\r\n    clickable: boolean;\r\n    playCard?: (type: string, value: string) => void;\r\n    hidden?: boolean;\r\n    highlighted?: boolean;\r\n    keepHighlighting?: boolean;\r\n}\r\n\r\ninterface Hash {\r\n    [details: string]: string;\r\n}\r\n\r\nconst GaigelCard: React.FC<Props> = ({\r\n    type,\r\n    value,\r\n    clickable,\r\n    playCard,\r\n    hidden = false,\r\n    highlighted = false,\r\n    keepHighlighting = true,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const symbolMap: Hash = {};\r\n    const iconSize = matches ? 13 : 10;\r\n    symbolMap[\"Eichel\"] = \"/Eichel.png\";\r\n    symbolMap[\"Blatt\"] = \"/Blatt.png\";\r\n    symbolMap[\"Herz\"] = \"/Herz.png\";\r\n    symbolMap[\"Schellen\"] = \"/Bollen.png\";\r\n\r\n    return (\r\n        <Paper\r\n            className={highlighted ? `${classes.root} ${classes.winAnimation}` : `${classes.root}`}\r\n            onClick={() => {\r\n                if (clickable && typeof playCard !== \"undefined\") playCard(type, value);\r\n            }}\r\n        >\r\n            <CardActionArea\r\n                className={classes.cardActionArea}\r\n                style={{\r\n                    pointerEvents: clickable ? \"auto\" : \"none\",\r\n                    border:\r\n                        keepHighlighting && highlighted ? \"1px solid #265802\" : \"1px solid #ddd\",\r\n                }}\r\n            >\r\n                {hidden && value !== \"\" ? (\r\n                    <img\r\n                        src={\"/cardBacksite_noSpaceAround_n1.png\"}\r\n                        width={matches ? \"54\" : \"44\"}\r\n                        height={matches ? \"79\" : \"64\"}\r\n                        alt=\"\"\r\n                    />\r\n                ) : (\r\n                    value !== \"\" && (\r\n                        <Box className={classes.card}>\r\n                            <Box className={classes.symbolRow}>\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                            </Box>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                align=\"center\"\r\n                                style={{ fontWeight: \"lighter\" }}\r\n                            >\r\n                                {value}\r\n                            </Typography>\r\n                            <Box className={classes.symbolRow}>\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    )\r\n                )}\r\n            </CardActionArea>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default GaigelCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        lightFontWeigth: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface Props {\r\n    trumpCard: CardProps;\r\n    openingName: string;\r\n}\r\n\r\nconst TrumpCard: React.FC<Props> = ({ trumpCard, openingName }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    let emptyChar: string = \"⠀\";\r\n\r\n    const [startHighlighting, setHighlight] = useState<boolean>(false);\r\n\r\n    // Forces a restart of the highlighting animation of GaigelCard\r\n    useEffect(() => {\r\n        setHighlight(false);\r\n        setTimeout(() => {\r\n            setHighlight(true);\r\n        }, 100);\r\n    }, [trumpCard]);\r\n\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.lightFontWeigth}>\r\n                Trumpf\r\n            </Typography>\r\n            <GaigelCard\r\n                type={trumpCard.type}\r\n                value={trumpCard.value}\r\n                clickable={false}\r\n                highlighted={startHighlighting}\r\n                keepHighlighting={false}\r\n            />\r\n            <Typography\r\n                variant={matches ? \"body1\" : \"subtitle2\"}\r\n                className={classes.lightFontWeigth}\r\n            >\r\n                {openingName !== \"\" ? openingName : emptyChar}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default TrumpCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Grid, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface Props {\r\n    playedCards: CardProps[];\r\n    playerCount: number;\r\n    opening: string;\r\n    highlightedCardIndex: number;\r\n}\r\n\r\nconst PlayedCards: React.FC<Props> = ({\r\n    playedCards,\r\n    playerCount,\r\n    opening,\r\n    highlightedCardIndex,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    let i: number = -1;\r\n    let hidden: boolean = opening === \"AndereAlteHat\" || opening === \"HöherHat\";\r\n\r\n    const [cards, setCards] = useState<CardProps[]>(\r\n        new Array(playerCount).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    useEffect(() => {\r\n        let tempCards: CardProps[] = playedCards.slice();\r\n        for (let i = playedCards.length; i < playerCount; i++) {\r\n            tempCards.push({ type: \"\", value: \"\" });\r\n        }\r\n        setCards(tempCards);\r\n    }, [playedCards, playerCount]);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Gespielte Karten\r\n            </Typography>\r\n\r\n            <Grid container spacing={1} justifyContent=\"center\">\r\n                {cards.map((card) => {\r\n                    i++;\r\n                    let highlighted = i === highlightedCardIndex;\r\n                    return (\r\n                        <Grid item key={i}>\r\n                            <GaigelCard\r\n                                type={card.type}\r\n                                value={card.value}\r\n                                clickable={false}\r\n                                hidden={hidden}\r\n                                highlighted={highlighted}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PlayedCards;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\nimport HelpButton from \"./HelpButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        cardContainer: {\r\n            marginLeft: 40,\r\n            marginRight: 40,\r\n            padding: 7,\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: \"4px\",\r\n        },\r\n        turnAnimation: {\r\n            \"&::before\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                background: \"radial-gradient(#ffffff,#265802)\",\r\n                animation: `$pulsate 1500ms infinite`,\r\n                borderRadius: \"4px\",\r\n            },\r\n            \"&::after\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                background: \"white\",\r\n                inset: \"5px\",\r\n                borderRadius: \"4px\",\r\n            },\r\n        },\r\n        \"@keyframes pulsate\": {\r\n            \"0%\": {\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                opacity: 2,\r\n            },\r\n            \"100%\": {\r\n                width: \"calc(100% + 5px)\",\r\n                height: \"calc(100% + 5px)\",\r\n                opacity: 0,\r\n            },\r\n        },\r\n        cardsButtonContainer: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface Props {\r\n    userCards: CardProps[];\r\n    playCard: (type: string, value: string) => void;\r\n    ownSocketId: string;\r\n    playerWithTurnSocketId: string;\r\n    toggleShowInstructions: () => void;\r\n    newCard: CardProps;\r\n    showEndPopup: boolean;\r\n}\r\n\r\nconst YourCards: React.FC<Props> = ({\r\n    userCards,\r\n    playCard,\r\n    ownSocketId,\r\n    playerWithTurnSocketId,\r\n    toggleShowInstructions,\r\n    newCard,\r\n    showEndPopup,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    let filledUserCards: CardProps[] = userCards.slice();\r\n\r\n    for (let q = filledUserCards.length; q < 5; q++) {\r\n        filledUserCards.splice(filledUserCards.length, 0, { type: \"\", value: \"\" });\r\n    }\r\n\r\n    let indexOfNewCard: number = -1;\r\n\r\n    filledUserCards.forEach((card, index) => {\r\n        if (\r\n            card.type === newCard.type &&\r\n            card.value === newCard.value &&\r\n            newCard.value !== \"\" &&\r\n            userCards.length === 5\r\n        ) {\r\n            indexOfNewCard = index;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Deine Karten\r\n            </Typography>\r\n\r\n            <Box className={classes.cardsButtonContainer}>\r\n                <Box\r\n                    className={\r\n                        ownSocketId === playerWithTurnSocketId && !showEndPopup\r\n                            ? `${classes.cardContainer} ${classes.turnAnimation}`\r\n                            : `${classes.cardContainer}`\r\n                    }\r\n                    style={ownSocketId === playerWithTurnSocketId ? {} : {}}\r\n                >\r\n                    {filledUserCards.map((card, index) => {\r\n                        let currentClickable = card.type !== \"\";\r\n                        let highlightCard = index === indexOfNewCard;\r\n\r\n                        return (\r\n                            <GaigelCard\r\n                                type={card.type}\r\n                                value={card.value}\r\n                                clickable={currentClickable}\r\n                                playCard={playCard}\r\n                                key={index}\r\n                                highlighted={highlightCard}\r\n                                keepHighlighting={false}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Box>\r\n\r\n                <Box\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: 15,\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"center\",\r\n                        alignContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        zIndex: 500,\r\n                    }}\r\n                >\r\n                    <HelpButton toggleShowInstructions={toggleShowInstructions} />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default YourCards;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: \"flex-grow\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            textAlign: \"center\",\r\n            fontWeight: \"lighter\",\r\n        },\r\n        headerBox: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n            gap: \"10px\",\r\n            alignItems: \"center\",\r\n        },\r\n        instructions: {\r\n            position: \"fixed\",\r\n        },\r\n        buttonContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        button: {\r\n            fontSize: 10,\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                fontSize: 14,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    GeElfen: () => void;\r\n    canPlayGeElfen: boolean;\r\n    AndereAlteHat: () => void;\r\n    canPlayAndereAlte: boolean;\r\n    HöherHat: () => void;\r\n    canPlayHöherHat: boolean;\r\n    AufDissle: () => void;\r\n    handleClick: () => void;\r\n    hover: boolean;\r\n}\r\n\r\nconst Opening: React.FC<Props> = ({\r\n    GeElfen,\r\n    AndereAlteHat,\r\n    HöherHat,\r\n    AufDissle,\r\n    handleClick,\r\n    hover,\r\n    canPlayAndereAlte,\r\n    canPlayGeElfen,\r\n    canPlayHöherHat,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const handleAndereAlteHat = () => {\r\n        AndereAlteHat();\r\n    };\r\n\r\n    const handleGeElfen = () => {\r\n        GeElfen();\r\n    };\r\n\r\n    const handleHöherHat = () => {\r\n        HöherHat();\r\n    };\r\n\r\n    const handleAufDissle = () => {\r\n        AufDissle();\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.headerBox}>\r\n                <HelpOutlineIcon style={{ opacity: \"0\", width: \"50px\" }} color=\"action\" />\r\n                <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                    Eröffnung\r\n                </Typography>\r\n                <IconButton onClick={handleClick}>\r\n                    <HelpOutlineIcon color=\"action\" />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Box className={classes.buttonContainer}>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleAndereAlteHat}\r\n                    disabled={!canPlayAndereAlte ? true : false}\r\n                >\r\n                    Andere Alte\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleGeElfen}\r\n                    disabled={!canPlayGeElfen ? true : false}\r\n                >\r\n                    Ge-Elfen\r\n                </Button>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleHöherHat}\r\n                    disabled={!canPlayHöherHat ? true : false}\r\n                >\r\n                    Höher hat\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleAufDissle}\r\n                >\r\n                    Auf Dissle\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Opening;\r\n","import { useState } from \"react\";\r\n\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography, Button, IconButton } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nimport Header from \"./Header\";\r\nimport HelpButton from \"./HelpButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: \"420px\",\r\n            padding: 25,\r\n            borderRadius: 10,\r\n            backgroundColor: \"#ffffff\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            gap: \"20px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        control: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        playerList: {\r\n            marginTop: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            gap: \"10px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                gap: \"15px\",\r\n            },\r\n        },\r\n        playerInformation: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        lighterFontWeight: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        controllContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        readyButton: {\r\n            width: \"30%\",\r\n        },\r\n    })\r\n);\r\ninterface PlayerProps {\r\n    username: string;\r\n    wins: number;\r\n}\r\ninterface Props {\r\n    backToLogin: () => void;\r\n    lobbycode: string;\r\n    playerInformation: PlayerProps[];\r\n    amountReadyPlayers: number;\r\n    getReady: () => void;\r\n    toggleShowInstructions: () => void;\r\n}\r\n\r\nconst LobbyPage: React.FC<Props> = ({\r\n    backToLogin,\r\n    lobbycode,\r\n    playerInformation,\r\n    amountReadyPlayers,\r\n    getReady,\r\n    toggleShowInstructions,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [ready, setReady] = useState<boolean>(false);\r\n\r\n    const handleOnClick = () => {\r\n        getReady();\r\n        setReady(true);\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Header />\r\n            <Box className={classes.control}>\r\n                <IconButton onClick={backToLogin}>\r\n                    <ArrowBackIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n                <Typography\r\n                    variant={matches ? \"h6\" : \"body1\"}\r\n                    className={classes.lighterFontWeight}\r\n                >\r\n                    Lobbycode: {lobbycode}\r\n                </Typography>\r\n            </Box>\r\n            <Box className={classes.playerList}>\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h5\" : \"h6\"}\r\n                    style={{ fontWeight: \"lighter\" }}\r\n                >\r\n                    Spielerliste\r\n                </Typography>\r\n                {playerInformation.map((player) => {\r\n                    let winString;\r\n                    if (player.wins === 1) winString = \"Sieg\";\r\n                    else winString = \"Siege\";\r\n                    let key = Math.random();\r\n                    return (\r\n                        <Box className={classes.playerInformation} key={key}>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                className={classes.lighterFontWeight}\r\n                            >\r\n                                {player.username}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                className={classes.lighterFontWeight}\r\n                                style={{ marginLeft: 10 }}\r\n                            >\r\n                                {player.wins} {winString}\r\n                            </Typography>\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Box>\r\n\r\n            <hr style={{ width: \"100%\" }} />\r\n\r\n            <Box className={classes.controllContainer}>\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h6\" : \"body1\"}\r\n                    className={classes.lighterFontWeight}\r\n                >\r\n                    Bereit: {amountReadyPlayers} / {playerInformation.length}\r\n                </Typography>\r\n                <HelpButton toggleShowInstructions={toggleShowInstructions} />\r\n            </Box>\r\n\r\n            <Button\r\n                className={classes.readyButton}\r\n                variant=\"contained\"\r\n                disabled={ready}\r\n                onClick={handleOnClick}\r\n                size={matches ? \"large\" : \"small\"}\r\n                style={{ width: \"100%\" }}\r\n            >\r\n                Bereit\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LobbyPage;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            minWidth: \"250px\",\r\n            maxWidth: \"500px\",\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        nameContainer: {\r\n            zIndex: 10,\r\n            padding: 4,\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 4,\r\n        },\r\n        name: {\r\n            zIndex: 10,\r\n            padding: 5,\r\n            paddingTop: 2,\r\n            paddingBottom: 2,\r\n            borderRadius: 4,\r\n            fontWeight: \"lighter\",\r\n        },\r\n        winAnimation: {\r\n            \"&::before\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                background: \"radial-gradient(#ffffff,#265802)\",\r\n                animation: `$pulsate 1500ms 3`,\r\n                borderRadius: \"4px\",\r\n            },\r\n            \"&::after\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                background: \"white\",\r\n                inset: \"4px\",\r\n                borderRadius: \"4px\",\r\n            },\r\n        },\r\n        \"@keyframes pulsate\": {\r\n            \"0%\": {\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                opacity: 2,\r\n            },\r\n            \"100%\": {\r\n                width: \"calc(100% + 4px)\",\r\n                height: \"calc(100% + 4px)\",\r\n                opacity: 0,\r\n            },\r\n        },\r\n    })\r\n);\r\ninterface PlayerProps {\r\n    username: string;\r\n    socketId: string;\r\n}\r\ninterface Props {\r\n    order: PlayerProps[];\r\n    playerWithTurn: PlayerProps;\r\n    highlightedPlayer: PlayerProps;\r\n}\r\n\r\nconst PlayerList: React.FC<Props> = ({ order, playerWithTurn, highlightedPlayer }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {order.map((player, index) => {\r\n                let turn = player.socketId === playerWithTurn.socketId;\r\n                let highlighted = player.socketId === highlightedPlayer.socketId;\r\n                return (\r\n                    <Box\r\n                        className={\r\n                            highlighted\r\n                                ? `${classes.nameContainer} ${classes.winAnimation}`\r\n                                : `${classes.nameContainer}`\r\n                        }\r\n                        key={index + 1}\r\n                    >\r\n                        <Typography\r\n                            variant={matches ? \"body1\" : \"body2\"}\r\n                            className={classes.name}\r\n                            style={{\r\n                                border: highlighted || turn ? \"2px solid #265802\" : \"none\",\r\n                            }}\r\n                            key={index}\r\n                        >\r\n                            {index + 1}. {player.username}\r\n                        </Typography>\r\n                    </Box>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"10px\",\r\n        },\r\n        element: {\r\n            fontWeight: \"lighter\",\r\n            width: \"50%\",\r\n        },\r\n        score: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    username: string;\r\n    lobbycode: string;\r\n    score: number;\r\n}\r\n\r\nconst GameInformation: React.FC<Props> = ({ username, lobbycode, score }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"subtitle2\"} className={classes.element}>\r\n                {username}\r\n            </Typography>\r\n            <Typography variant={matches ? \"h5\" : \"h6\"} className={classes.score}>\r\n                {Math.floor(score)}\r\n            </Typography>\r\n            <Typography\r\n                variant={matches ? \"h6\" : \"subtitle2\"}\r\n                className={classes.element}\r\n                align=\"right\"\r\n            >\r\n                {lobbycode}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GameInformation;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {},\r\n        alert: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                fontSize: \"16px\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    snackbarType: string;\r\n    type: string;\r\n    detail: string;\r\n    reset: () => void;\r\n}\r\n\r\nconst Popup: React.FC<Props> = ({ snackbarType, type, detail, reset }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    let message = \"\";\r\n\r\n    switch (type) {\r\n        // -------- Warnings --------\r\n        case \"gameOngoing\":\r\n            message =\r\n                \"Dieser Lobby kann nicht beigetreten werden, da das Spiel bereits im vollen Gange ist.\";\r\n            break;\r\n        case \"falsePlayercount\":\r\n            message =\r\n                \"Mit dieser Anzahl an Spielern lässt sich kein Spiel starten. Für ein Spiel werden 2, 3, 4 oder 6 Spieler benötigt.\";\r\n            break;\r\n        case \"notYourTurn\":\r\n            message = \"Sie sind nicht an der Reihe und können daher jetzt keine Karte spielen.\";\r\n            break;\r\n        case \"noOpeningChosen\":\r\n            message = \"Sie müssen eine Eröffnung auswählen, bevor Sie eine Karte spielen können.\";\r\n            break;\r\n        case \"noAce\":\r\n            message = \"Sie haben kein Ass. Sie können dieses Opening nicht spielen.\";\r\n            break;\r\n        case \"noAceButAceOpening\":\r\n            message =\r\n                \"Sie haben eine Eröffnung gewählt, bei welcher als erste Karte ein Ass gespielt werden muss.\";\r\n            break;\r\n        case \"aceOrTrumpInHöherHat\":\r\n            message =\r\n                \"Sie haben eine Eröffnung gewählt, bei welcher kein Ass und kein Trumpf als erste Karte gespielt werden darf.\";\r\n            break;\r\n        case \"höherHatNotPossible\":\r\n            message =\r\n                \"Sie können diese Eröffnung nicht spielen, da sie keine Karte haben, die weder Trumpf noch ein Ass ist.\";\r\n            break;\r\n        case \"waitForCards\":\r\n            message = \"Sie müssen warten, bis neue Karten ausgeteilt wurden.\";\r\n            break;\r\n        case \"lobbyFull\":\r\n            message = \"Diese Lobby hat bereits die maximale Spieleranzahl von 6 Spielern erreicht.\";\r\n            break;\r\n        // -------- Infos --------\r\n        case \"somebodyWonTheGame\":\r\n            message = `${detail} hat das Spiel gewonnen.`;\r\n            break;\r\n        case \"playerLeft\":\r\n            message = `${detail} hat das Spiel verlassen. Die Lobby wird in 5 Sekunden geschlossen.`;\r\n            break;\r\n        case \"meldenNotCurrentlyPlaying\":\r\n            message = `Sie können nur melden, wenn Sie die Runde beginnen.`;\r\n            break;\r\n        case \"hatGemeldet\":\r\n            message = `${detail} hat gemeldet.`;\r\n            break;\r\n        case \"hasToServe\":\r\n            message = `Sie müssen eine Karte in der gleichen Farbe spielen.`;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            open={type !== \"\"}\r\n            autoHideDuration={50000}\r\n            onClose={reset}\r\n            anchorOrigin={{\r\n                vertical: snackbarType === \"warning\" ? \"bottom\" : \"top\",\r\n                horizontal: \"center\",\r\n            }}\r\n            transitionDuration={0}\r\n        >\r\n            <Alert\r\n                onClose={reset}\r\n                severity={snackbarType === \"warning\" ? \"warning\" : \"info\"}\r\n                className={classes.alert}\r\n            >\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Popup;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography, Card, Button, IconButton } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            zIndex: 50,\r\n            maxWidth: \"450px\",\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"15px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        header: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        logo: {\r\n            width: \"50px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                width: \"70px\",\r\n            },\r\n        },\r\n        rankingHeaderContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        rankingHeader: {\r\n            textAlign: \"center\",\r\n            fontWeight: \"lighter\",\r\n        },\r\n        rankingContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"5px\",\r\n        },\r\n        rankingElement: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        rankingElementText: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        footer: {\r\n            marginTop: \"10px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"30px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface EndPlayerInformation {\r\n    username: string;\r\n    score: number;\r\n    wins: number;\r\n}\r\n\r\ninterface Props {\r\n    endInformation: EndPlayerInformation[];\r\n    backToLobby: () => void;\r\n    lostAufDissle: boolean;\r\n    losingPlayer?: string;\r\n}\r\n\r\nconst EndPopup: React.FC<Props> = ({\r\n    endInformation,\r\n    backToLobby,\r\n    lostAufDissle,\r\n    losingPlayer,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [showRanking, setShowRanking] = useState<boolean>(false);\r\n    const [counter, setCounter] = useState<number>(20);\r\n    const [finalSorting, setFinalSorting] = useState<EndPlayerInformation[]>([\r\n        { username: \"\", score: 0, wins: 0 },\r\n    ]);\r\n\r\n    let sortedByScore: EndPlayerInformation[] = endInformation.slice().sort((player1, player2) => {\r\n        if (player1.score < player2.score) return 1;\r\n        if (player1.score > player2.score) return -1;\r\n        return 0;\r\n    });\r\n\r\n    let sortedByWins: EndPlayerInformation[] = endInformation.slice().sort((player1, player2) => {\r\n        if (player1.wins < player2.wins) return 1;\r\n        if (player1.wins > player2.wins) return -1;\r\n        return 0;\r\n    });\r\n\r\n    const toggleShowRanking = () => {\r\n        let newToggle: boolean = !showRanking;\r\n        setShowRanking(newToggle);\r\n    };\r\n\r\n    const decreaseCounter = (newCounter: number) => {\r\n        setCounter(newCounter);\r\n\r\n        if (newCounter > 0) {\r\n            setTimeout(() => {\r\n                decreaseCounter(newCounter - 1);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showRanking) setFinalSorting(sortedByWins);\r\n        else setFinalSorting(sortedByScore);\r\n    }, [showRanking]);\r\n\r\n    useEffect(() => {\r\n        setCounter(20);\r\n        decreaseCounter(20);\r\n    }, [endInformation]);\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Box className={classes.header}>\r\n                <img src={\"/crown.png\"} className={classes.logo} alt=\"\" />\r\n                <Typography align=\"center\" variant={matches ? \"h4\" : \"h5\"}>\r\n                    {lostAufDissle\r\n                        ? `${losingPlayer} hat auf Dissle verloren!`\r\n                        : `${sortedByScore[0].username} hat gewonnen!`}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <hr />\r\n\r\n            <Box className={classes.rankingHeaderContainer}>\r\n                <IconButton onClick={toggleShowRanking}>\r\n                    <ArrowBackIosIcon />\r\n                </IconButton>\r\n                <Typography className={classes.rankingHeader} variant={matches ? \"h5\" : \"h6\"}>\r\n                    {showRanking ? \"Ranking\" : \"Platzierungen\"}\r\n                </Typography>\r\n                <IconButton onClick={toggleShowRanking}>\r\n                    <ArrowForwardIosIcon />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Box className={classes.rankingContainer}>\r\n                {finalSorting.map((player, index) => (\r\n                    <Box className={classes.rankingElement} key={index}>\r\n                        <Typography\r\n                            variant={matches ? \"h6\" : \"body1\"}\r\n                            className={classes.rankingElementText}\r\n                        >\r\n                            {index + 1}. {player.username}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant={matches ? \"h6\" : \"body1\"}\r\n                            className={classes.rankingElementText}\r\n                        >\r\n                            {showRanking ? player.wins : Math.floor(player.score)}{\" \"}\r\n                            {showRanking\r\n                                ? player.wins === 1\r\n                                    ? \"Sieg\"\r\n                                    : \"Siege\"\r\n                                : player.score === 1\r\n                                ? \"Punkt\"\r\n                                : \"Punkte\"}\r\n                        </Typography>\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n\r\n            <Box className={classes.footer}>\r\n                <Button startIcon={<ArrowBackIcon />} variant=\"contained\" onClick={backToLobby}>\r\n                    Lobby\r\n                </Button>\r\n                <Typography align=\"right\" noWrap={true}>\r\n                    Nächste Runde in <b>{counter}</b>\r\n                </Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EndPopup;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"40px\",\r\n        },\r\n        callButton: {\r\n            zIndex: 10,\r\n        },\r\n        callButtonContainer: {\r\n            padding: 4,\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: \"4px\",\r\n        },\r\n        announcingAnimation: {\r\n            \"&::before\": {\r\n                // zIndex: 30,\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                background: \"radial-gradient(#ffffff,#265802)\",\r\n                animation: `$pulsate 1500ms infinite`,\r\n                borderRadius: \"4px\",\r\n            },\r\n            \"&::after\": {\r\n                content: \"''\",\r\n                position: \"absolute\",\r\n                background: \"white\",\r\n                inset: \"4px\",\r\n                borderRadius: \"4px\",\r\n            },\r\n        },\r\n        \"@keyframes pulsate\": {\r\n            \"0%\": {\r\n                width: \"calc(100% - 15px)\",\r\n                height: \"calc(100% - 15px)\",\r\n                opacity: 2,\r\n            },\r\n            \"100%\": {\r\n                width: \"calc(100% + 4px)\",\r\n                height: \"calc(100% + 4px)\",\r\n                opacity: 0,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    canCall: boolean;\r\n    announcing: boolean;\r\n    melden: () => void;\r\n    canSteal: boolean;\r\n    rauben: () => void;\r\n}\r\n\r\nconst Actions: React.FC<Props> = ({ canCall, announcing, melden, canSteal, rauben }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {canCall && (\r\n                <Box\r\n                    className={\r\n                        announcing\r\n                            ? `${classes.callButtonContainer} ${classes.announcingAnimation}`\r\n                            : `${classes.callButtonContainer}`\r\n                    }\r\n                >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size={matches ? \"medium\" : \"small\"}\r\n                        className={classes.callButton}\r\n                        style={{\r\n                            background: announcing === false ? \"#e0e0e0\" : \"#b9d4a8\",\r\n                        }}\r\n                        onClick={melden}\r\n                    >\r\n                        Melden\r\n                    </Button>\r\n                </Box>\r\n            )}\r\n\r\n            {canSteal && (\r\n                <Button variant=\"contained\" size={matches ? \"medium\" : \"small\"} onClick={rauben}>\r\n                    Rauben\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Actions;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, IconButton, Typography, Card, MobileStepper } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            zIndex: 50,\r\n            position: \"fixed\",\r\n            top: \"45%\",\r\n            left: \"50%\",\r\n            width: \"30%\",\r\n            maxWidth: \"500px\",\r\n            minWidth: \"300px\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"15px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        headerButton: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n        closeButton: {\r\n            position: \"absolute\",\r\n            top: \"0px\",\r\n            right: \"0px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    setClickedOpening: (newValue: boolean) => void;\r\n}\r\n\r\nconst OpeningInstructions: React.FC<Props> = ({ setClickedOpening }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    let instructions: string[] = [\r\n        \"Bei dieser Eröffnungsmöglichkeit wird ein Ass verdeckt durch die Vorhand gespielt. Alle anderen Spieler spielen nun auch verdeckt jeweils eine Karte. Der Stich gehört dem Spieler, der das gleiche Ass wie die Vorhand gespielt hat. Ist dies nicht der Fall, gehört der Stich der Vorhand.\",\r\n        \"In dieser Eröffnungsmöglichkeit wird das Ass von der Vorhand offen ausgespielt. Die anderen Spieler können nun eine beliebige Karte offen abwerfen. Der Stich geht dann an den Spielbeginner.\",\r\n        \"Bei Höher hat wird eine Karte verdeckt ausgespielt, welche weder ein Ass, noch ein Trumpf ist. Auch die anderen Spieler spielen jeweils eine verdeckte Karte aus. Der Stich geht an den Spieler, welcher eine Karte mit der gleichen Farbe, aber mit höherem Wert gelegt hat. Wird keine Karte der gleichen Farbe mit höherem Wert gelegt, so geht der Stich an die Vorhand.\",\r\n        \"Eine weitere Eröffnungsmöglichkeit ist Dissle. Sagt die Vorhand zu Beginn des Spiels, dass auf Dissle gespielt wird, so gewinnt die Vorhand das Spiel, falls sie im Verlauf des Spiels fünf Siebener gleichzeitig besitzt. Die Gegner können bereits vorher das reguläre Spielende erreichen. Die Vorhand hat das Spiel verloren, wenn sie einen Stich gewinnt.\",\r\n    ];\r\n    let instructionTitles: string[] = [\"Andere Alte\", \"Ge-Elfen\", \"Höher hat\", \"Auf Dissle\"];\r\n\r\n    const pageDown = () => {\r\n        let newPage = currentPage - 1 < 0 ? 3 : currentPage - 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const pageUp = () => {\r\n        let newPage = currentPage + 1 > 3 ? 0 : currentPage + 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Box className={classes.headerButton}>\r\n                <IconButton onClick={pageDown}>\r\n                    <ArrowBackIosIcon />\r\n                </IconButton>\r\n                <Typography variant={matches ? \"h5\" : \"h6\"} style={{ fontWeight: \"lighter\" }}>\r\n                    {instructionTitles[currentPage]}\r\n                </Typography>\r\n                <IconButton onClick={pageUp}>\r\n                    <ArrowForwardIosIcon />\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                    className={classes.closeButton}\r\n                    onClick={() => {\r\n                        setClickedOpening(false);\r\n                    }}\r\n                >\r\n                    <CloseIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Typography variant={matches ? \"body1\" : \"caption\"}>\r\n                {instructions[currentPage]}\r\n            </Typography>\r\n\r\n            <MobileStepper\r\n                style={{ backgroundColor: \"white\" }}\r\n                position=\"static\"\r\n                variant=\"dots\"\r\n                steps={4}\r\n                activeStep={currentPage}\r\n                backButton={<></>}\r\n                nextButton={<></>}\r\n            ></MobileStepper>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default OpeningInstructions;\r\n","import { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n        paragraph: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface ParagraphProps {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PageProps {\r\n    title: string;\r\n    paragraphes: ParagraphProps[];\r\n}\r\ninterface Props {\r\n    page: PageProps;\r\n}\r\n\r\nconst InstructionPage: React.FC<Props> = ({ page }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h5\" : \"h6\"} style={{ fontWeight: \"lighter\" }}>\r\n                {page.title}\r\n            </Typography>\r\n\r\n            {page.paragraphes.map((paragraph) => {\r\n                return (\r\n                    <Box className={classes.paragraph}>\r\n                        <Typography\r\n                            variant={matches ? \"h6\" : \"body1\"}\r\n                            style={{ fontWeight: \"normal\", width: \"100%\" }}\r\n                        >\r\n                            {paragraph.title}\r\n                        </Typography>\r\n                        <Typography align=\"justify\" variant={matches ? \"body1\" : \"body2\"}>\r\n                            {paragraph.content}\r\n                        </Typography>\r\n                    </Box>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default InstructionPage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nimport GaigelCard from \"./../GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n        exampleCard: {\r\n            position: \"absolute\",\r\n        },\r\n        listContainer: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        listItem: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        listItemText: {\r\n            width: \"40%\",\r\n            fontWeight: \"normal\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface CardInfoProps {\r\n    name: string;\r\n    value: number;\r\n}\r\n\r\ninterface Props {}\r\n\r\nconst FirstInstructionPage: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [currentCard, setCurrentCard] = useState<CardProps>({ type: \"Eichel\", value: \"A\" });\r\n\r\n    const cardValues: string[] = [\"A\", \"10\", \"K\", \"O\", \"U\", \"7\"];\r\n    const cardTypes: string[] = [\"Eichel\", \"Blatt\", \"Herz\", \"Schellen\"];\r\n\r\n    const cardInfo: CardInfoProps[] = [\r\n        {\r\n            name: \"Ass\",\r\n            value: 11,\r\n        },\r\n        {\r\n            name: \"Zehn\",\r\n            value: 10,\r\n        },\r\n        {\r\n            name: \"König\",\r\n            value: 4,\r\n        },\r\n        {\r\n            name: \"Ober\",\r\n            value: 3,\r\n        },\r\n        {\r\n            name: \"Unter\",\r\n            value: 2,\r\n        },\r\n        {\r\n            name: \"Sieben\",\r\n            value: 0,\r\n        },\r\n    ];\r\n\r\n    const loopThroughCardValues = () => {\r\n        let valueIndex: number = cardValues.findIndex((value) => value === currentCard.value);\r\n        valueIndex++;\r\n        if (valueIndex >= cardValues.length) valueIndex = 0;\r\n\r\n        let randomTypeIndex: number;\r\n        do {\r\n            randomTypeIndex = Math.floor(Math.random() * 4);\r\n        } while (cardTypes[randomTypeIndex] === currentCard.type);\r\n\r\n        let newCard: CardProps = {\r\n            type: cardTypes[randomTypeIndex],\r\n            value: cardValues[valueIndex],\r\n        };\r\n\r\n        setCurrentCard(newCard);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            loopThroughCardValues();\r\n        }, 1800);\r\n    }, [currentCard]);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h5\" : \"h6\"} style={{ fontWeight: \"lighter\" }}>\r\n                Grundlegendes\r\n            </Typography>\r\n            <Typography align=\"justify\" variant={matches ? \"body1\" : \"body2\"}>\r\n                Gaigel ist ein schwäbisches Kartenspiel, was mit 48 Karten gespielt wird. Die\r\n                Reihenfolge der Karten und die jeweiligen Werte sieht folgendermaßen aus:\r\n            </Typography>\r\n\r\n            <Box className={classes.listContainer}>\r\n                <Box className={classes.exampleCard}>\r\n                    <GaigelCard\r\n                        type={currentCard.type}\r\n                        value={currentCard.value}\r\n                        clickable={false}\r\n                    />\r\n                </Box>\r\n\r\n                {cardInfo.map((card) => {\r\n                    return (\r\n                        <Box className={classes.listItem}>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                className={classes.listItemText}\r\n                            >\r\n                                {card.name}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                align=\"right\"\r\n                                className={classes.listItemText}\r\n                            >\r\n                                {card.value} Punkte\r\n                            </Typography>\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Box>\r\n\r\n            <Typography align=\"justify\" variant={matches ? \"body1\" : \"body2\"}>\r\n                Gewonnen hat, wer zuerst eine Punktzahl von mindestens 101 Punkten erreicht, oder,\r\n                wer am Ende, wenn alle Karten ausgespielt wurden, die meisten Punkte gesammelt hat.\r\n                Punkte können gesammelt werden, indem Stiche gewonnen werden. Denn wer einen Stich\r\n                gewinnt, erhält die Summe der Werte aller enthaltenen Karten.\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default FirstInstructionPage;\r\n","import { makeStyles, createStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nimport { Box, Typography, Card, IconButton, MobileStepper } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nimport InstructionPage from \"./InstructionPages/InstructionPage\";\r\nimport FirstInstructionPage from \"./InstructionPages/FirstInstructionPage\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            zIndex: 60,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"10px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n            borderRadius: 20,\r\n        },\r\n        headerButton: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        closeButton: {\r\n            position: \"absolute\",\r\n            top: \"0px\",\r\n            right: \"0px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface ParagraphProps {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\ninterface PageProps {\r\n    title: string;\r\n    paragraphes: ParagraphProps[];\r\n}\r\n\r\ninterface Props {\r\n    toggleShowInstructions: () => void;\r\n}\r\n\r\nconst Instructions: React.FC<Props> = ({ toggleShowInstructions }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    const pages: PageProps[] = [\r\n        {\r\n            title: \"Einleitung\",\r\n            paragraphes: [\r\n                {\r\n                    title: \"Lobby erstellen\",\r\n                    content:\r\n                        'Um eine Lobby zu erstellen, geben Sie einfach einen Nutzernamen und einen Lobbycode ein, unter welchem Sie eine Lobby erstellen wollen. Andere Spieler können Ihrer Lobby nun beitreten, wenn sie denselben Lobbycode eingeben. Drücken sie dann auf \"Beitreten\".',\r\n                },\r\n                {\r\n                    title: \"Lobby beitreten\",\r\n                    content:\r\n                        'Wenn Sie einer Lobby beitreten wollen, gehen Sie vor wie beim Erstellen einer Lobby: Wählen Sie einen Nutzernamen und geben Sie den Lobbycode ein, unter welchem die Lobby erstellt wurde. Drücken sie dann auf \"Beitreten\".',\r\n                },\r\n                {\r\n                    title: \"Spiel starten\",\r\n                    content:\r\n                        'Sobald alle Spieler auf \"Bereit\" geklickt haben und die Spieleranzahl 2, 3, 4 oder 6 Spielern liegt wird das Spiel gestartet.',\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Spielverlauf\",\r\n            paragraphes: [\r\n                {\r\n                    title: \"Stiche\",\r\n                    content:\r\n                        \"Zu Beginn einer regulären Runde spielt die Person, die den letzten Stich gewonnen hat, eine beliebige Karte offen aus. Daraufhin können die anderen Spieler nacheinander Karten hinzulegen. Sobald jeder Spieler eine Karte gelegt hat wird entschieden, wer den Stich gewonnen hat. Gewonnen hat der, der eine Karte mit der gleichen Farbe, wie die der ersten Karte, aber mit einem höheren Wert oder wer den höchsten Trumpf gelegt hat. Wurde keine höhere Karte und kein Trumpf gelegt, so gewinnt der Spieler, der die erste Karte gelegt hat.\",\r\n                },\r\n                {\r\n                    title: \"Bedienen\",\r\n                    content:\r\n                        \"Sobald der Talon leer ist, also keine Karten mehr zum Nachziehen vorhanden sind, besteht Bedienpflicht. Wenn man also eine Karte besitzt, die die gleiche Farbe wie die erste Karte des Stiches hat, so muss diese gelegt werden. Der letzte Stich des Spiels ist zehn zusätzliche Punkte wert.\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Eröffnungen 1/2\",\r\n            paragraphes: [\r\n                {\r\n                    title: \"\",\r\n                    content:\r\n                        \"Bei Gaigel kann die Vorhand, also die Person, die am Anfang der Runde als Erste ausspielen darf, zwischen vier verschiedenen Eröffnungen wählen. Diese werden auf dieser und der nächsten Seite erklärt.\",\r\n                },\r\n                {\r\n                    title: \"Andere Alte\",\r\n                    content:\r\n                        \"Bei dieser Eröffnungsmöglichkeit wird ein Ass verdeckt durch die Vorhand gespielt. Alle anderen Spieler spielen nun auch verdeckt jeweils eine Karte. Der Stich gehört dem Spieler, der das gleiche Ass wie die Vorhand gespielt hat. Ist dies nicht der Fall, gehört der Stich der Vorhand.\",\r\n                },\r\n                {\r\n                    title: \"Ge-Elfen\",\r\n                    content:\r\n                        \"In dieser Eröffnungsmöglichkeit wird das Ass von der Vorhand offen ausgespielt. Die anderen Spieler können nun eine beliebige Karte offen abwerfen. Der Stich geht dann an den Spielbeginner.\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Eröffnungen 2/2\",\r\n            paragraphes: [\r\n                {\r\n                    title: \"Höher hat\",\r\n                    content:\r\n                        \"Bei Höher hat wird eine Karte verdeckt ausgespielt, welche weder ein Ass, noch ein Trumpf ist. Auch die anderen Spieler spielen jeweils eine verdeckte Karte aus. Der Stich geht an den Spieler, welcher eine Karte mit der gleichen Farbe, aber mit höherem Wert gelegt hat. Wird keine Karte der gleichen Farbe mit höherem Wert gelegt, so geht der Stich an die Vorhand.\",\r\n                },\r\n                {\r\n                    title: \"Auf Dissle\",\r\n                    content:\r\n                        \"Eine weitere Eröffnungsmöglichkeit ist Dissle. Sagt die Vorhand zu Beginn des Spiels, dass auf Dissle gespielt wird, so gewinnt die Vorhand das Spiel, falls sie im Verlauf des Spiels fünf Siebener gleichzeitig besitzt. Die Gegner können bereits vorher das reguläre Spielende erreichen. Die Vorhand hat das Spiel verloren, wenn sie einen Stich gewinnt. In diesem Fall gewinnen alle anderen Spieler.\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Besondere Regeln\",\r\n            paragraphes: [\r\n                {\r\n                    title: \"Melden\",\r\n                    content:\r\n                        \"Besitzt ein Spieler sowohl den Ober als auch den König derselben Farbe, so kann er dieses Paar melden. Für ein normales Paar gibt es 20 und für ein Paar in Trumpffarbe 40 Punkte. Gemeldet werden kann nur, wenn der Spieler zuvor einen Stich gemacht hat und nun die nächste Runde beginnen kann. In dieser nächsten Runde muss eine der beiden gemeldeten Karten gespielt werden.\",\r\n                },\r\n                {\r\n                    title: \"Rauben\",\r\n                    content:\r\n                        \"Besitzt ein Spieler die Trumpf Sieben, so kann diese gegen die Karte getauscht werden, die zu Beginn des Spiels als Trumpfkarte gewählt wurde. Geraubt werden kann nur, wenn der Spieler zuvor einen Stich gemacht hat und nun die nächste Runde beginnen kann.\",\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    const amountOfPages: number = pages.length;\r\n\r\n    const pageDown = () => {\r\n        let newPage = currentPage - 1 < 0 ? amountOfPages : currentPage - 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const pageUp = () => {\r\n        let newPage = currentPage + 1 > amountOfPages ? 0 : currentPage + 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Box\r\n                className={classes.headerButton}\r\n                style={matches ? { gap: \"20px\" } : { gap: \"10px\" }}\r\n            >\r\n                <IconButton onClick={pageDown}>\r\n                    <ArrowBackIosIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h4\" : \"h5\"}\r\n                    className={classes.header}\r\n                >\r\n                    Anleitung\r\n                </Typography>\r\n                <IconButton onClick={pageUp}>\r\n                    <ArrowForwardIosIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n\r\n                <IconButton className={classes.closeButton} onClick={toggleShowInstructions}>\r\n                    <CloseIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <hr style={{ width: \"100%\" }} />\r\n\r\n            {currentPage === 0 ? (\r\n                <InstructionPage page={pages[0]} />\r\n            ) : currentPage === 1 ? (\r\n                <FirstInstructionPage />\r\n            ) : (\r\n                <InstructionPage page={pages[currentPage - 1]} />\r\n            )}\r\n\r\n            <MobileStepper\r\n                style={{ backgroundColor: \"white\" }}\r\n                position=\"static\"\r\n                variant=\"dots\"\r\n                steps={amountOfPages + 1}\r\n                activeStep={currentPage}\r\n                backButton={<></>}\r\n                nextButton={<></>}\r\n            ></MobileStepper>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Instructions;\r\n","// MARK: Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport LandingPage from \"./LandingPage\";\r\nimport Talon from \"./Talon\";\r\nimport TrumpCard from \"./TrumpCard\";\r\nimport PlayedCards from \"./PlayedCards\";\r\nimport YourCards from \"./YourCards\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Opening from \"./Opening\";\r\nimport LobbyPage from \"./LobbyPage\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport GameInformation from \"./GameInformation\";\r\nimport Popup from \"./Popup\";\r\nimport EndPopup from \"./EndPopup\";\r\nimport Header from \"./Header\";\r\nimport Actions from \"./Actions\";\r\nimport OpeningInstructions from \"./OpeningInstructions\";\r\nimport Instructions from \"./Instructions\";\r\n\r\n// MARK: Styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: \"relative\",\r\n            height: \"100vh\",\r\n            padding: 10,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\",\r\n            alignContent: \"space-around\",\r\n            alignItems: \"center\",\r\n        },\r\n        openingInstructions: {},\r\n        talonAndTrump: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {}\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface PlayerProps {\r\n    username: string;\r\n    socketId: string;\r\n}\r\n\r\ninterface LobbyInformation {\r\n    lobbycode: string;\r\n    amountReadyPlayers: number;\r\n    playerInformation: [\r\n        {\r\n            username: string;\r\n            wins: number;\r\n        }\r\n    ];\r\n}\r\n\r\ninterface WarningInfoProps {\r\n    type: string;\r\n    detail: string;\r\n}\r\n\r\ninterface EndPlayerInformation {\r\n    username: string;\r\n    score: number;\r\n    wins: number;\r\n}\r\n\r\nconst Gaigel: React.FC<Props> = () => {\r\n    // MARK: States\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    // Boolean for deciding on whether to show the landing page or the lobby\r\n    const [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n\r\n    // Boolean for deciding on whether to show the lobby page or the game\r\n    const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n\r\n    const [showInstructions, setShowInstructions] = useState<boolean>(false);\r\n\r\n    const [ownUsername, setOwnUsername] = useState<string>(\"\");\r\n    const [ownSocketId, setOwnSocketId] = useState<string>(\"\");\r\n\r\n    const [score, setScore] = useState<number>(0);\r\n\r\n    // All needed information about the joined lobby\r\n    const [lobbyInformation, setLobbyInformation] = useState<LobbyInformation>({\r\n        lobbycode: \"\",\r\n        amountReadyPlayers: 0,\r\n        playerInformation: [{ username: \"\", wins: 0 }],\r\n    });\r\n\r\n    const [order, setOrder] = useState<PlayerProps[]>([]);\r\n    const [playerWithTurn, setPlayerWithTurn] = useState<PlayerProps>({\r\n        username: \"\",\r\n        socketId: \"\",\r\n    });\r\n\r\n    // Toggle for showing opinion options\r\n    const [opening, setOpening] = useState<boolean>(false);\r\n\r\n    // Saves the code for the chosen opening (e.g. \"HöherHat\", \"AufDissle\")\r\n    // Is cleared after the first Stich\r\n    const [currentOpening, setCurrentOpening] = useState<string>(\"\");\r\n\r\n    // Saves the real name of the chosen opening (e.g. \"Höher hat\", \"Auf Dissle\")\r\n    // Is cleared after a game has been won\r\n    const [openingName, setOpeningName] = useState<string>(\"\");\r\n\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    // Determines if the player can call (Melden)\r\n    const [canCall, setCanCall] = useState<boolean>(false);\r\n\r\n    const [announcing, setAnnouncing] = useState<boolean>(false);\r\n\r\n    // Determines if the player can steal (Rauben)\r\n    const [canSteal, setCanSteal] = useState<boolean>(false);\r\n\r\n    const [showEndPopup, setShowEndPopup] = useState<boolean>(false);\r\n\r\n    const [endInformation, setEndInformation] = useState<EndPlayerInformation[]>([\r\n        { username: \"\", score: 0, wins: 0 },\r\n    ]);\r\n\r\n    // Determines which card should be highlighted\r\n    // If no card should be highlighted set the value to -1\r\n    const [highlightedCardIndex, setHighlightedCardIndex] = useState<number>(-1);\r\n\r\n    const [highlightedPlayer, setHighlightedPlayer] = useState<PlayerProps>({\r\n        username: \"\",\r\n        socketId: \"\",\r\n    });\r\n\r\n    // The cards that can still be drawn from the talon\r\n    const [talonCards, setTalonCards] = useState<CardProps[]>(\r\n        new Array(0).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    // The trump card\r\n    const [trumpCard, setTrumpCard] = useState<CardProps>({ type: \"\", value: \"\" });\r\n\r\n    // The cards that are currently being played\r\n    const [playedCards, setPlayedCards] = useState<CardProps[]>([]);\r\n\r\n    // The cards that the user currently has\r\n    const [yourCards, setYourCards] = useState<CardProps[]>(\r\n        new Array(5).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    const [warningType, setWarningType] = useState<WarningInfoProps>({ type: \"\", detail: \"\" });\r\n    const [infoType, setInfoType] = useState<WarningInfoProps>({ type: \"\", detail: \"\" });\r\n\r\n    const [clickedOpening, setClickedOpening] = useState<boolean>(false);\r\n\r\n    const [lostAufDissle, setLostAufDissle] = useState<boolean>(false);\r\n\r\n    const [losingPlayer, setLosingPlayer] = useState<string>(\"\");\r\n\r\n    const [canPlayAndereAlte, setCanPlayAndereAlte] = useState<boolean>(true);\r\n    const [canPlayGeElfen, setCanPlayGeElfen] = useState<boolean>(true);\r\n    const [canPlayHöherHat, setCanPlayHöherHat] = useState<boolean>(true);\r\n\r\n    const [newCard, setNewcard] = useState<CardProps>({ type: \"\", value: \"\" });\r\n\r\n    const toggleShowInstructions = () => {\r\n        let newValue: boolean = !showInstructions;\r\n        setShowInstructions(newValue);\r\n    };\r\n\r\n    const onClickOpening = () => {\r\n        setClickedOpening(!clickedOpening);\r\n    };\r\n\r\n    const resetWarning = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setWarningType({ type: \"\", detail: \"\" });\r\n    };\r\n\r\n    const resetInfo = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setInfoType({ type: \"\", detail: \"\" });\r\n    };\r\n\r\n    const login = (username: string, lobbycode: string) => {\r\n        setOwnUsername(username);\r\n\r\n        // @ts-ignore\r\n        socket.emit(\"joinLobby\", { username: username, lobbycode: lobbycode });\r\n    };\r\n\r\n    const backToLogin = () => {\r\n        setLoggedIn(false);\r\n        setGameStarted(false);\r\n\r\n        // @ts-ignore\r\n        socket.emit(\"backToLogin\", \"\");\r\n    };\r\n\r\n    const backToLobby = () => {\r\n        setGameStarted(false);\r\n        // @ts-ignore\r\n        socket.emit(\"backToLobby\", \"\");\r\n    };\r\n\r\n    const getReady = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"getReady\", \"\");\r\n    };\r\n\r\n    const drawCard = () => {\r\n        console.log(\"Want to draw card\");\r\n    };\r\n\r\n    // MARK: playCard\r\n    const playCard = (type: string, value: string) => {\r\n        if (opening) {\r\n            setWarningType({ type: \"noOpeningChosen\", detail: \"\" });\r\n            return;\r\n        }\r\n\r\n        if (yourCards.length < 5 && talonCards.length > 0) {\r\n            setWarningType({ type: \"waitForCards\", detail: \"\" });\r\n            return;\r\n        }\r\n\r\n        let playedCard: CardProps = { type: type, value: value };\r\n        // @ts-ignore\r\n        socket.emit(\"playCard\", playedCard);\r\n    };\r\n\r\n    const AndereAlteHat = () => {\r\n        if (yourCards.filter((card) => card.value === \"A\").length > 0) {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"AndereAlteHat\");\r\n        } else {\r\n            setWarningType({ type: \"noAce\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const GeElfen = () => {\r\n        if (yourCards.filter((card) => card.value === \"A\").length > 0) {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"GeElfen\");\r\n        } else {\r\n            setWarningType({ type: \"noAce\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const HöherHat = () => {\r\n        let allowedCards = yourCards.filter(\r\n            (card) => trumpCard.type !== card.type && card.value !== \"A\"\r\n        );\r\n\r\n        if (allowedCards.length < 1) {\r\n            setWarningType({ type: \"höherHatNotPossible\", detail: \"\" });\r\n        } else {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"HöherHat\");\r\n        }\r\n    };\r\n\r\n    const AufDissle = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"chooseOpening\", \"AufDissle\");\r\n    };\r\n\r\n    const melden = () => {\r\n        if (ownUsername === playerWithTurn.username) {\r\n            // @ts-ignore\r\n            socket.emit(\"Melden\", !announcing);\r\n            setAnnouncing(!announcing);\r\n        } else {\r\n            setWarningType({ type: \"meldenNotCurrentlyPlaying\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const rauben = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"Rauben\");\r\n    };\r\n\r\n    // MARK: useEffect\r\n    useEffect(() => {\r\n        console.log(\"UseEffect 1 was called\");\r\n        // @ts-ignore\r\n        setSocket(socket);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!Opening) return;\r\n\r\n        let playerHasAce: boolean = yourCards.filter((card) => card.value === \"A\").length > 0;\r\n\r\n        setCanPlayAndereAlte(playerHasAce);\r\n        setCanPlayGeElfen(playerHasAce);\r\n\r\n        let hasNonTrumpNonAceCard =\r\n            yourCards.filter((card) => trumpCard.type !== card.type && card.value !== \"A\").length >\r\n            0;\r\n\r\n        setCanPlayHöherHat(hasNonTrumpNonAceCard);\r\n    }, [yourCards]);\r\n\r\n    // @ts-ignore\r\n    useEffect(() => {\r\n        let domain = \"https://gaigel-web.herokuapp.com/\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n            domain = \"http://127.0.0.1:5000\";\r\n        }\r\n\r\n        const newSocket = socketIOClient(domain);\r\n\r\n        // @ts-ignore\r\n        setSocket(newSocket);\r\n\r\n        newSocket.on(\"onConnect\", (data: string) => {\r\n            setOwnSocketId(data);\r\n            console.log(\"Here\");\r\n        });\r\n\r\n        newSocket.on(\"setLoggedIn\", (data: boolean) => {\r\n            setLoggedIn(data);\r\n        });\r\n\r\n        newSocket.on(\"setLobbyInformation\", (data: LobbyInformation) => {\r\n            setLobbyInformation(data);\r\n        });\r\n\r\n        newSocket.on(\"setOrder\", (data: PlayerProps[]) => {\r\n            setOrder(data);\r\n        });\r\n\r\n        newSocket.on(\"setPlayerWithTurn\", (data: PlayerProps) => {\r\n            setPlayerWithTurn(data);\r\n        });\r\n\r\n        newSocket.on(\"setInfoType\", (data: WarningInfoProps) => {\r\n            setInfoType(data);\r\n        });\r\n\r\n        newSocket.on(\"setWarningType\", (data: WarningInfoProps) => {\r\n            setWarningType(data);\r\n        });\r\n\r\n        newSocket.on(\"setScore\", (data: number) => {\r\n            setScore(data);\r\n        });\r\n\r\n        newSocket.on(\"setGameStarted\", (data: boolean) => {\r\n            setGameStarted(data);\r\n            console.log(\"Game state: \" + data);\r\n        });\r\n\r\n        newSocket.on(\"setTalon\", (data: CardProps[]) => {\r\n            setTalonCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setTrumpCard\", (data: CardProps) => {\r\n            setTrumpCard(data);\r\n        });\r\n\r\n        newSocket.on(\"setYourCards\", (data: CardProps[]) => {\r\n            setYourCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setPlayedCards\", (data: CardProps[]) => {\r\n            setPlayedCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setOpening\", (data: boolean) => {\r\n            setOpening(data);\r\n        });\r\n\r\n        newSocket.on(\"setCurrentOpening\", (data: string) => {\r\n            setCurrentOpening(data);\r\n        });\r\n\r\n        newSocket.on(\"setOpeningName\", (data: string) => {\r\n            setOpeningName(data);\r\n        });\r\n\r\n        newSocket.on(\"setCanCall\", (data: boolean) => {\r\n            setCanCall(data);\r\n        });\r\n\r\n        newSocket.on(\"setCanSteal\", (data: boolean) => {\r\n            setCanSteal(data);\r\n        });\r\n\r\n        newSocket.on(\"setShowEndPopup\", (data: boolean) => {\r\n            setShowEndPopup(data);\r\n        });\r\n\r\n        newSocket.on(\"setEndInformation\", (data: EndPlayerInformation[]) => {\r\n            setEndInformation(data);\r\n        });\r\n\r\n        newSocket.on(\"setLostAufDissle\", (data: boolean) => {\r\n            setLostAufDissle(data);\r\n        });\r\n\r\n        newSocket.on(\"setLosingPlayer\", (data: string) => {\r\n            setLosingPlayer(data);\r\n        });\r\n\r\n        newSocket.on(\"setHighlightedCardIndex\", (data: number) => {\r\n            setHighlightedCardIndex(data);\r\n        });\r\n\r\n        newSocket.on(\"setHighlightedPlayer\", (data: PlayerProps) => {\r\n            setHighlightedPlayer(data);\r\n        });\r\n\r\n        newSocket.on(\"setNewcard\", (data: CardProps) => {\r\n            setNewcard(data);\r\n        });\r\n\r\n        return () => newSocket.close();\r\n    }, [setSocket]);\r\n\r\n    // MARK: Return\r\n    // @ts-ignore\r\n    return (\r\n        <Box\r\n            className={classes.root}\r\n            style={\r\n                loggedIn && gameStarted\r\n                    ? { backgroundColor: \"#fff\", boxShadow: \"5px 5px 15px black\" }\r\n                    : {}\r\n            }\r\n        >\r\n            {!loggedIn ? (\r\n                <LandingPage login={login} toggleShowInstructions={toggleShowInstructions} />\r\n            ) : !gameStarted ? (\r\n                <LobbyPage\r\n                    backToLogin={backToLogin}\r\n                    lobbycode={lobbyInformation.lobbycode}\r\n                    playerInformation={lobbyInformation.playerInformation}\r\n                    amountReadyPlayers={lobbyInformation.amountReadyPlayers}\r\n                    getReady={getReady}\r\n                    toggleShowInstructions={toggleShowInstructions}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <Header />\r\n                    <GameInformation\r\n                        username={ownUsername}\r\n                        lobbycode={lobbyInformation.lobbycode}\r\n                        score={score}\r\n                    />\r\n                    <PlayerList\r\n                        order={order}\r\n                        playerWithTurn={playerWithTurn}\r\n                        highlightedPlayer={highlightedPlayer}\r\n                    />\r\n                    <hr style={{ width: \"100%\" }} />\r\n                    <Box className={classes.talonAndTrump}>\r\n                        <Talon cardsLeft={talonCards.length} drawCard={drawCard} />\r\n                        <TrumpCard trumpCard={trumpCard} openingName={openingName} />\r\n                    </Box>\r\n\r\n                    <PlayedCards\r\n                        playedCards={playedCards}\r\n                        playerCount={lobbyInformation.playerInformation.length}\r\n                        opening={currentOpening}\r\n                        highlightedCardIndex={highlightedCardIndex}\r\n                    />\r\n\r\n                    <hr style={{ width: \"100%\" }} />\r\n\r\n                    {clickedOpening && (\r\n                        <OpeningInstructions setClickedOpening={setClickedOpening} />\r\n                    )}\r\n\r\n                    {showEndPopup && (\r\n                        <EndPopup\r\n                            lostAufDissle={lostAufDissle}\r\n                            endInformation={endInformation}\r\n                            backToLobby={backToLobby}\r\n                            losingPlayer={losingPlayer}\r\n                        />\r\n                    )}\r\n\r\n                    {(canCall || canSteal) && (\r\n                        <Actions\r\n                            canCall={canCall}\r\n                            announcing={announcing}\r\n                            melden={melden}\r\n                            canSteal={canSteal}\r\n                            rauben={rauben}\r\n                        />\r\n                    )}\r\n\r\n                    {opening && (\r\n                        <Opening\r\n                            AndereAlteHat={AndereAlteHat}\r\n                            GeElfen={GeElfen}\r\n                            HöherHat={HöherHat}\r\n                            AufDissle={AufDissle}\r\n                            handleClick={onClickOpening}\r\n                            canPlayHöherHat={canPlayHöherHat}\r\n                            canPlayGeElfen={canPlayGeElfen}\r\n                            canPlayAndereAlte={canPlayAndereAlte}\r\n                            hover={clickedOpening}\r\n                        />\r\n                    )}\r\n\r\n                    <YourCards\r\n                        userCards={yourCards}\r\n                        playCard={playCard}\r\n                        ownSocketId={ownSocketId}\r\n                        playerWithTurnSocketId={playerWithTurn.socketId}\r\n                        toggleShowInstructions={toggleShowInstructions}\r\n                        newCard={newCard}\r\n                        showEndPopup={showEndPopup}\r\n                    />\r\n                </>\r\n            )}\r\n            <Popup\r\n                snackbarType=\"info\"\r\n                type={infoType.type}\r\n                detail={infoType.detail}\r\n                reset={resetInfo}\r\n            />\r\n            <Popup\r\n                snackbarType=\"warning\"\r\n                type={warningType.type}\r\n                detail={warningType.detail}\r\n                reset={resetWarning}\r\n            />\r\n            {showInstructions && <Instructions toggleShowInstructions={toggleShowInstructions} />}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Gaigel;\r\n","import Box from \"@material-ui/core/Box\";\r\n\r\nimport Gaigel from \"./components/Gaigel/Gaigel\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Box>\r\n            <Gaigel />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n   /* roboto-300 - latin */\r\n//   @font-face {\r\n//     font-family: 'Roboto';\r\n//     font-style: normal;\r\n//     font-weight: 300;\r\n//     src: url('../fonts/roboto-v27-latin-300.eot'); /* IE9 Compat Modes */\r\n//     src: local(''),\r\n//          url('../fonts/roboto-v27-latin-300.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n//          url('../fonts/roboto-v27-latin-300.woff2') format('woff2'), /* Super Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.woff') format('woff'), /* Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.ttf') format('truetype'), /* Safari, Android, iOS */\r\n//          url('../fonts/roboto-v27-latin-300.svg#Roboto') format('svg'); /* Legacy iOS */\r\n//   }\r\n\r\n   *{\r\n        margin: 0;\r\n        padding: 0;\r\n        -moz-box-sizing: border-box;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        font-family: \"Roboto\", sans-serif;\r\n   }\r\n\r\n   /* This is here to make my eyes hurt less at night */\r\n   body {\r\n      background-color: #313131;\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      background-image: url(\"/greenBackground.png\");\r\n      background-size: cover;\r\n      background-position: center;\r\n   }\r\n\r\n   html {\r\n        /* font-size: 62.5%; */\r\n   }\r\n   `;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#c62828\",\r\n        },\r\n        secondary: {\r\n            main: \"#ff9800\",\r\n        },\r\n        background: {\r\n            default: \"#00ff00\",\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <GlobalStyle />\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}