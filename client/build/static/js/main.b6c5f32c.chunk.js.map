{"version":3,"sources":["components/Navbar/Navbar.tsx","components/ProjectCard/ProjectCard.tsx","components/ProjectContainer/ProjectContainer.tsx","components/Footer/Footer.tsx","components/GameOfLife/ConwaysGrid.tsx","components/GameOfLife/GameOfLife.tsx","components/ShoppingItem/ShoppingItem.tsx","components/AddShoppingItem/AddShoppingItem.tsx","components/ShoppingCode/ShoppingCode.tsx","components/ShoppingList/ShoppingList.tsx","App.tsx","GlobalStyle.ts","index.tsx"],"names":["useStyles","makeStyles","root","header","backgroundColor","menuButton","color","margin","title","flexGrow","cursor","projectName","fontWeight","Navbar","classes","locationMap","location","useLocation","history","useHistory","className","AppBar","position","Toolbar","Typography","onClick","push","variant","pathname","maxWidth","image","height","width","description","marginBottom","readMore","marginLeft","expand","transform","expandOpen","ProjectCard","project","descriptionSplit","split","useState","expanded","setExpanded","handleExpandClick","Card","CardActionArea","path","CardMedia","component","alt","imagePath","CardContent","subtitle","CardActions","Button","endIcon","clsx","Collapse","in","timeout","map","section","index","marginTop","ProjectContainer","Grid","container","justifyContent","item","padding","footer","Footer","align","ConwaysGrid","gridWidth","gridHeight","grid","cellSize","currentDelay","updateDelay","this","i","Math","floor","q","ceil","x","y","delay","length","p5","nextGrid","count","countNeighbours","fill","stroke","strokeWeight","square","theme","createStyles","marginRight","slider","breakpoints","down","up","button","borderRadius","switchText","GameOfLife","cgrid","play","Box","display","flexDirection","alignItems","Switch","onChange","inputProps","Slider","getAriaValueText","value","setSpeed","toString","defaultValue","step","min","max","clearGrid","setup","canvasParentRef","cnv","createCanvas","windowWidth","windowHeight","parent","rectMode","mousePressed","toggleCell","mouseX","mouseY","draw","clear","update","show","windowResized","resizeCanvas","paper","paddingLeft","paddingRight","name","ShoppingItem","completed","toggleComplete","deleteItem","changeName","editing","setEditing","productName","setProductName","makeshiftId","concat","handleEdit","handleSave","useEffect","listener","event","code","document","getElementById","activeElement","addEventListener","removeEventListener","Paper","TextField","id","autoFocus","target","maxLength","IconButton","style","textDecoration","noWrap","textfield","select","add","refresh","AddShoppingItem","locations","addItem","handleRefresh","setName","setLocation","handleAdd","label","FormControl","InputLabel","Select","MenuItem","ShoppingCode","handleCodeSubmit","text","setText","required","second","ShoppingList","shoppingList","setShoppingList","setCode","database","pass","headers","fetchItems","pCode","a","data","FormData","append","axios","post","then","response","catch","error","console","log","finally","setTimeout","firstTry","newCompleted","filter","listcode","newName","direction","border","newCode","App","minHeight","exact","GlobalStyle","createGlobalStyle","createTheme","palette","primary","main","secondary","background","default","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.b6c5f32c.chunk.js","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Hidden from \"@material-ui/core/Hidden\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// import TemporaryDrawer from \"../TemporaryDrawer/TemporaryDrawer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    header: {\r\n        backgroundColor: \"#070707\",\r\n    },\r\n    menuButton: {\r\n        color: \"white\",\r\n        margin: 10,\r\n        // marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        cursor: \"pointer\",\r\n    },\r\n    projectName: {\r\n        fontWeight: 400,\r\n    },\r\n});\r\n\r\ninterface Hash {\r\n    [details: string]: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\nconst Navbar: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n\r\n    const locationMap: Hash = {};\r\n    locationMap[\"/\"] = \"Homepage\";\r\n    locationMap[\"/gameoflife\"] = \"Game of Life\";\r\n    locationMap[\"/shopping\"] = \"Shopping List\";\r\n    const location = useLocation();\r\n\r\n    const history = useHistory();\r\n    const handleOnClick = () => {\r\n        history.push(\"/\");\r\n    };\r\n\r\n    // const navElements: string[] = [\"Home\", \"About\", \"Contact\"];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.header} position=\"sticky\">\r\n                <Toolbar>\r\n                    <Typography onClick={handleOnClick} variant=\"h5\" className={classes.title}>\r\n                        obrm.tech\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.projectName}>\r\n                        {locationMap[location.pathname]}\r\n                    </Typography>\r\n                    {/* <Hidden smUp>\r\n                        <TemporaryDrawer items={navElements} />\r\n                    </Hidden>\r\n                    <Hidden xsDown>\r\n                        {navElements.map((text) => (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.menuButton}\r\n                            >\r\n                                {text}\r\n                            </Button>\r\n                        ))}\r\n                    </Hidden> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        margin: 10,\r\n    },\r\n    image: {\r\n        margin: 5,\r\n        height: 150,\r\n        // width: 340,\r\n        width: \"97%\",\r\n    },\r\n    description: {\r\n        marginBottom: 0,\r\n    },\r\n    readMore: {\r\n        marginLeft: \"auto\",\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        // transition: theme.transitions.create(\"transform\", {\r\n        //     duration: theme.transitions.duration.shortest,\r\n        // }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    project: {\r\n        title: string;\r\n        subtitle: string;\r\n        description: string;\r\n        imagePath: string;\r\n        path: string;\r\n    };\r\n}\r\n\r\nconst ProjectCard: React.FC<Props> = ({ project }) => {\r\n    const classes = useStyles();\r\n    const description: string = project.description;\r\n    const descriptionSplit: string[] = description.split(\"§\");\r\n    const readMoreButton: boolean = true;\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const history = useHistory();\r\n    const handleOnClick = () => {\r\n        history.push(project.path);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea onClick={handleOnClick}>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    component=\"img\"\r\n                    alt={project.title}\r\n                    image={project.imagePath}\r\n                    title={project.title}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"h5\">{project.title}</Typography>\r\n                    <Typography variant=\"subtitle1\">{project.subtitle}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n\r\n            <CardActions>\r\n                {readMoreButton ? (\r\n                    <Button\r\n                        className={classes.readMore}\r\n                        endIcon={\r\n                            <ExpandMoreIcon\r\n                                className={clsx(classes.expand, {\r\n                                    [classes.expandOpen]: expanded,\r\n                                })}\r\n                            />\r\n                        }\r\n                        onClick={handleExpandClick}\r\n                    >\r\n                        {expanded ? \"Read less\" : \"Read more\"}\r\n                    </Button>\r\n                ) : (\r\n                    <>\r\n                        <Typography className={classes.readMore} variant=\"body2\">\r\n                            {expanded ? \"Read less\" : \"Read more\"}\r\n                        </Typography>\r\n\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: expanded,\r\n                            })}\r\n                            onClick={handleExpandClick}\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    </>\r\n                )}\r\n            </CardActions>\r\n\r\n            <Collapse in={expanded} timeout=\"auto\">\r\n                <CardContent>\r\n                    {description !== \"\" &&\r\n                        descriptionSplit.map((section, index) => (\r\n                            <Typography className={classes.description} variant=\"body1\" key={index}>\r\n                                {section}\r\n                            </Typography>\r\n                        ))}\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n});\r\n\r\ninterface Props {}\r\n\r\ninterface Project {\r\n    title: string;\r\n    subtitle: string;\r\n    description: string;\r\n    imagePath: string;\r\n    path: string;\r\n}\r\n\r\nconst ProjectContainer: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    const projects: Project[] = [\r\n        {\r\n            title: \"Shopping List\",\r\n            subtitle: \"A simple Todo List\",\r\n            description:\r\n                \"This project contains a simple implementation of a todo list. You can add items by following these 4 steps:§⠀§1. Enter a list code. This is the keyword you will use to access your list. Make sure not to use something too generic as this might lead to others using your keyword by accident.§2. Enter the desired name of the list item you would like to add.§3. Click on the menu in the center to choose a location where you would like to get your item.§4. Press enter or click on the button on the right to add the item to the list.§⠀§You can cross items out by clicking on them. In addition to that you can also rename and delete items. Just click on the corresponding icons on the right of each item. Make sure to press enter or click on the save icon on the right in order to save your changes after renaming.\",\r\n            imagePath: \"shoppinglist.png\",\r\n            path: \"/shopping\",\r\n        },\r\n        {\r\n            title: \"Conway's Game of Life\",\r\n            subtitle: \"Cellular automaton\",\r\n            description:\r\n                \"The Game of Life is a game that is based on a grid of cells. A cell can either be alive or dead which is indicated by the color of it. Each iteration the following 4 simple rules are applied:§⠀§1. Cells with less than 2 neighbours die of loneliness.§2. Cells with exactly 2 or 3 neighbours survive.§3. Cells with more than 3 neighbours die of overcrowding.§4. Cells with exactly 3 neighbours come back to life.§⠀§Click on a cell to toggle its state and click on the switch to start the simulation. You can pause the game by pressing the same switch again. The speed of the simulation can be adjusted by using the slider. Last but not least you can clear the grid with the button on the right.\",\r\n            imagePath: \"gameoflife.png\",\r\n            path: \"/gameoflife\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Grid className={classes.root} container justifyContent=\"center\">\r\n            {projects.map((project) => (\r\n                <Grid item key={project.title}>\r\n                    <ProjectCard project={project}></ProjectCard>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ProjectContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: \"white\",\r\n        padding: 15,\r\n        backgroundColor: \"#080808\",\r\n    },\r\n    footer: {\r\n        marginTop: \"auto\",\r\n    },\r\n});\r\n\r\ninterface Props {}\r\n\r\nconst Footer: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Typography className={classes.root} align=\"center\" variant=\"subtitle1\">\r\n                Copyright © 2021 Leon Obermann\r\n            </Typography>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import p5Types from \"p5\"; //Import this for typechecking and intellisense\r\n\r\nexport class ConwaysGrid {\r\n    gridWidth: number;\r\n    gridHeight: number;\r\n    grid: boolean[][];\r\n    cellSize: number = 35;\r\n    currentDelay: number;\r\n    updateDelay: number = 15;\r\n\r\n    constructor(gridWidth: number, gridHeight: number) {\r\n        this.gridWidth = gridWidth;\r\n        this.gridHeight = gridHeight;\r\n        this.grid = [];\r\n        this.currentDelay = this.updateDelay - 1;\r\n\r\n        for (let i: number = 0; i < Math.floor(this.gridHeight / this.cellSize); i++) {\r\n            this.grid[i] = [];\r\n            for (let q: number = 0; q < Math.ceil(this.gridWidth / this.cellSize); q++) {\r\n                this.grid[i][q] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public toggleCell(x: number, y: number) {\r\n        let i: number;\r\n        let q: number;\r\n\r\n        i = Math.floor(y / this.cellSize);\r\n        q = Math.floor(x / this.cellSize);\r\n\r\n        this.grid[i][q] = !this.grid[i][q];\r\n    }\r\n\r\n    public setSpeed(delay: number) {\r\n        this.updateDelay = 100 - delay;\r\n    }\r\n\r\n    public clearGrid() {\r\n        for (let i: number = 0; i < this.grid.length; i++) {\r\n            for (let q: number = 0; q < this.grid[0].length; q++) {\r\n                this.grid[i][q] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public update(p5: p5Types) {\r\n        if (this.currentDelay < this.updateDelay) {\r\n            this.currentDelay++;\r\n        } else {\r\n            this.currentDelay = 0;\r\n\r\n            let nextGrid: boolean[][] = [];\r\n\r\n            for (let i: number = 0; i < this.grid.length; i++) {\r\n                nextGrid[i] = [];\r\n                for (let q: number = 0; q < this.grid[0].length; q++) {\r\n                    let count: number = this.countNeighbours(i, q);\r\n\r\n                    if (this.grid[i][q]) {\r\n                        if (count < 2 || count > 3) nextGrid[i][q] = false;\r\n                        else nextGrid[i][q] = true;\r\n                    } else {\r\n                        if (count === 3) nextGrid[i][q] = true;\r\n                        else nextGrid[i][q] = false;\r\n                    }\r\n                }\r\n            }\r\n            this.grid = nextGrid;\r\n        }\r\n    }\r\n\r\n    public countNeighbours(i: number, q: number) {\r\n        let count: number = 0;\r\n        if (i - 1 >= 0) {\r\n            if (this.grid[i - 1][q - 1]) count++;\r\n            if (this.grid[i - 1][q]) count++;\r\n            if (this.grid[i - 1][q + 1]) count++;\r\n        }\r\n        if (i + 1 < this.grid.length) {\r\n            if (this.grid[i + 1][q - 1]) count++;\r\n            if (this.grid[i + 1][q]) count++;\r\n            if (this.grid[i + 1][q + 1]) count++;\r\n        }\r\n\r\n        if (this.grid[i][q - 1]) count++;\r\n        if (this.grid[i][q + 1]) count++;\r\n\r\n        return count;\r\n    }\r\n\r\n    public show(p5: p5Types) {\r\n        for (let i: number = 0; i < this.grid.length; i++) {\r\n            for (let q: number = 0; q < this.grid[0].length; q++) {\r\n                if (this.grid[i][q]) {\r\n                    p5.fill(255);\r\n                } else {\r\n                    p5.fill(31);\r\n                }\r\n                p5.stroke(255);\r\n                p5.strokeWeight(0.2);\r\n                p5.square(this.cellSize / 2 + this.cellSize * q, this.cellSize / 2 + this.cellSize * i, this.cellSize);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Sketch from \"react-p5\";\r\nimport p5Types from \"p5\"; //Import this for typechecking and intellisense\r\n\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { ConwaysGrid } from \"./ConwaysGrid\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            marginLeft: 20,\r\n            marginRight: 20,\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n        },\r\n        slider: {\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                marginLeft: 20,\r\n                marginRight: 20,\r\n            },\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                marginLeft: 50,\r\n                marginRight: 50,\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                marginLeft: 100,\r\n                marginRight: 100,\r\n            },\r\n\r\n            width: \"50%\",\r\n        },\r\n        button: {\r\n            width: 80,\r\n            borderRadius: 7,\r\n        },\r\n        switchText: {\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            color: \"white\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {}\r\n\r\nconst GameOfLife: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    let play: boolean = false;\r\n    let cgrid: ConwaysGrid;\r\n    const offset: number = 185;\r\n\r\n    //See annotations in JS for more information\r\n    const setup = (p5: p5Types, canvasParentRef: Element) => {\r\n        let cnv = p5.createCanvas(p5.windowWidth, p5.windowHeight - offset).parent(canvasParentRef);\r\n\r\n        p5.rectMode(\"center\");\r\n\r\n        cgrid = new ConwaysGrid(p5.windowWidth, p5.windowHeight - offset);\r\n\r\n        cnv.mousePressed(() => {\r\n            cgrid.toggleCell(p5.mouseX, p5.mouseY);\r\n        });\r\n    };\r\n\r\n    const draw = (p5: p5Types) => {\r\n        p5.clear();\r\n\r\n        if (play) {\r\n            cgrid.update(p5);\r\n        }\r\n\r\n        cgrid.show(p5);\r\n    };\r\n\r\n    const windowResized = (p5: p5Types) => {\r\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight - offset);\r\n    };\r\n\r\n    const togglePlay = () => {\r\n        play = !play;\r\n    };\r\n\r\n    function valuetext(value: number) {\r\n        if (cgrid) cgrid.setSpeed(value);\r\n        return value.toString();\r\n    }\r\n\r\n    const clearGrid = () => {\r\n        cgrid.clearGrid();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root} display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Typography className={classes.switchText}>Pause</Typography>\r\n                <Switch onChange={togglePlay} color=\"primary\" inputProps={{ \"aria-label\": \"primary checkbox\" }} />\r\n                <Typography className={classes.switchText}>Play</Typography>\r\n\r\n                <Slider\r\n                    className={classes.slider}\r\n                    getAriaValueText={valuetext}\r\n                    aria-labelledby=\"speed-slider\"\r\n                    defaultValue={85}\r\n                    step={2}\r\n                    min={0}\r\n                    max={100}\r\n                />\r\n                <Button className={classes.button} variant=\"contained\" onClick={clearGrid}>\r\n                    Clear\r\n                </Button>\r\n            </Box>\r\n            <Sketch setup={setup} draw={draw} windowResized={windowResized} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GameOfLife;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 800,\r\n    },\r\n    paper: {\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        margin: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    name: {\r\n        marginRight: \"auto\",\r\n        width: \"60%\",\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    index: number;\r\n    name: string;\r\n    location: string;\r\n    completed: string;\r\n    toggleComplete: (name: string, location: string, completed: string, firstTry: boolean) => void;\r\n    deleteItem: (name: string, location: string, firstTry: boolean) => void;\r\n    changeName: (name: string, location: string, newName: string, firstTry: boolean) => void;\r\n}\r\n\r\nconst ShoppingItem: React.FC<Props> = ({ index, name, location, completed, toggleComplete, deleteItem, changeName }) => {\r\n    const classes = useStyles();\r\n    const [editing, setEditing] = useState<boolean>(false);\r\n    const [productName, setProductName] = useState<string>(name);\r\n    const makeshiftId: string = index.toString().concat(location);\r\n\r\n    const handleEdit = () => {\r\n        setEditing(!editing);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        changeName(name, location, productName, true);\r\n        handleEdit();\r\n    };\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setProductName(event.target.value as string);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!editing) setProductName(name);\r\n\r\n        const listener = (event: any) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                if (document.getElementById(makeshiftId) === document.activeElement) {\r\n                    handleSave();\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, [editing, name, makeshiftId, handleSave]);\r\n\r\n    return (\r\n        <Grid className={classes.root} item>\r\n            <Paper className={classes.paper}>\r\n                {editing ? (\r\n                    <>\r\n                        <TextField\r\n                            id={makeshiftId}\r\n                            className={classes.name}\r\n                            value={productName}\r\n                            autoFocus\r\n                            onChange={handleTextChange}\r\n                            inputProps={{ maxLength: 75 }}\r\n                        />\r\n                        <IconButton onClick={handleSave}>\r\n                            <SaveIcon />\r\n                        </IconButton>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Typography\r\n                            className={classes.name}\r\n                            style={{ textDecoration: completed === \"1\" ? \"line-through\" : \"none\" }}\r\n                            noWrap\r\n                            onClick={() => {\r\n                                toggleComplete(name, location, completed, true);\r\n                            }}\r\n                        >\r\n                            {name}\r\n                        </Typography>\r\n                        <IconButton onClick={handleEdit}>\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </>\r\n                )}\r\n\r\n                <IconButton\r\n                    onClick={() => {\r\n                        deleteItem(name, location, true);\r\n                    }}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ShoppingItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 800,\r\n        marginTop: 5,\r\n        marginBottom: 10,\r\n    },\r\n    paper: {\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 10,\r\n        margin: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    textfield: {\r\n        width: \"40%\",\r\n    },\r\n    select: {\r\n        width: \"40%\",\r\n        marginLeft: 15,\r\n    },\r\n    add: { marginLeft: 10 },\r\n    refresh: {},\r\n});\r\n\r\ninterface Props {\r\n    locations: string[];\r\n    addItem: (name: string, location: string, firstTry: boolean) => void;\r\n    handleRefresh: () => void;\r\n}\r\n\r\nconst AddShoppingItem: React.FC<Props> = ({ locations, addItem, handleRefresh }) => {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [location, setLocation] = useState<string>(\"Rewe\");\r\n\r\n    const handleSelectChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setLocation(event.target.value as string);\r\n    };\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setName(event.target.value as string);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const listener = (event: any) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                if (document.getElementById(\"AddShoppingItem-TextField\") === document.activeElement) {\r\n                    handleAdd();\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    });\r\n\r\n    const handleAdd = () => {\r\n        if (name !== \"\") addItem(name, location, true);\r\n        setName(\"\");\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.root} item>\r\n            <Paper className={classes.paper}>\r\n                <TextField\r\n                    id=\"AddShoppingItem-TextField\"\r\n                    className={classes.textfield}\r\n                    value={name}\r\n                    autoFocus\r\n                    label=\"Product\"\r\n                    onChange={handleTextChange}\r\n                    inputProps={{ maxLength: 75 }}\r\n                />\r\n                <FormControl className={classes.select}>\r\n                    <InputLabel>Location</InputLabel>\r\n                    <Select value={location} onChange={handleSelectChange}>\r\n                        {locations.map((item) => (\r\n                            <MenuItem value={item} key={item}>\r\n                                {item}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <IconButton className={classes.add} onClick={handleAdd}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n                <IconButton className={classes.refresh} onClick={handleRefresh}>\r\n                    <RefreshIcon />\r\n                </IconButton>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default AddShoppingItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"90%\",\r\n        maxWidth: 400,\r\n        marginTop: 5,\r\n        marginBottom: 10,\r\n    },\r\n    paper: {\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        margin: 5,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    textfield: {\r\n        width: \"50%\",\r\n    },\r\n    button: {\r\n        marginLeft: 15,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    handleCodeSubmit: (newCode: string) => void;\r\n}\r\n\r\nconst ShoppingCode: React.FC<Props> = ({ handleCodeSubmit }) => {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const classes = useStyles();\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setText(event.target.value as string);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const listener = (event: any) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                handleCodeSubmit(text);\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <Grid className={classes.root} item>\r\n            <Paper className={classes.paper}>\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    required\r\n                    autoFocus\r\n                    variant=\"outlined\"\r\n                    label=\"List code\"\r\n                    onChange={handleTextChange}\r\n                    inputProps={{ maxLength: 15 }}\r\n                />\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                        handleCodeSubmit(text);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ShoppingCode;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ShoppingItem from \"../../components/ShoppingItem/ShoppingItem\";\r\nimport AddShoppingItem from \"../../components/AddShoppingItem/AddShoppingItem\";\r\nimport ShoppingCode from \"../../components/ShoppingCode/ShoppingCode\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {},\r\n    second: {\r\n        maxWidth: 700,\r\n        width: \"90%\",\r\n        marginTop: 10,\r\n        marginBottom: 20,\r\n    },\r\n    location: {\r\n        marginTop: 10,\r\n        marginRight: \"auto\",\r\n        marginLeft: 10,\r\n        color: \"white\",\r\n        fontWeight: 200,\r\n    },\r\n});\r\n\r\ninterface Props {}\r\n\r\ninterface Item {\r\n    id: string;\r\n    name: string;\r\n    location: string;\r\n    completed: string;\r\n}\r\n\r\nconst ShoppingList: React.FC<Props> = () => {\r\n    const [shoppingList, setShoppingList] = useState<Array<Item>>([]);\r\n    const [code, setCode] = useState<string>(\"\");\r\n    const classes = useStyles();\r\n    const database: string = \"https://obrm.de/api/index.php\";\r\n    const pass: string = \"BkhMXFtCb0jo9sajGp7t0Nxb9FXD\";\r\n    const headers = {\r\n        \"Content-Type\": \"form-data\",\r\n    };\r\n    const locations: string[] = [\"Rewe\", \"Edeka\", \"Real\", \"Lidl\", \"Aldi\", \"DM\", \"Bioladen\", \"Genussfaktur\", \"Sonstiges\"];\r\n\r\n    const fetchItems = async (pCode: string) => {\r\n        const data = new FormData();\r\n        data.append(\"pass\", pass);\r\n        data.append(\"query\", `SELECT * FROM new_shopping WHERE listcode = \"${pCode}\"`);\r\n\r\n        await axios\r\n            .post(database, data, {\r\n                headers: headers,\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n                setShoppingList(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => {\r\n                    fetchItems(pCode);\r\n                }, 5000);\r\n            });\r\n    };\r\n\r\n    const toggleComplete = async (name: string, location: string, completed: string, firstTry: boolean) => {\r\n        const data = new FormData();\r\n        const newCompleted = completed === \"1\" ? \"0\" : \"1\";\r\n        data.append(\"pass\", pass);\r\n        data.append(\r\n            \"query\",\r\n            `UPDATE new_shopping SET completed = ${newCompleted} WHERE name = \"${name}\" AND location = \"${location}\" AND listcode = \"${code}\"`\r\n        );\r\n\r\n        if (firstTry) {\r\n            setShoppingList(\r\n                shoppingList.map((item) => {\r\n                    return item.name === name && item.location === location\r\n                        ? { id: item.id, name: item.name, location: item.location, completed: newCompleted }\r\n                        : item;\r\n                })\r\n            );\r\n        }\r\n\r\n        await axios\r\n            .post(database, data, {\r\n                headers: headers,\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setTimeout(() => {\r\n                    toggleComplete(name, location, completed, false);\r\n                }, 1000);\r\n            });\r\n    };\r\n\r\n    const deleteItem = async (name: string, location: string, firstTry: boolean) => {\r\n        const data = new FormData();\r\n        data.append(\"pass\", pass);\r\n        data.append(\r\n            \"query\",\r\n            `DELETE FROM new_shopping WHERE name = \"${name}\" AND location = \"${location}\" AND listcode = \"${code}\"`\r\n        );\r\n\r\n        if (firstTry) {\r\n            setShoppingList(shoppingList.filter((item) => !(item.name === name && item.location === location)));\r\n        }\r\n\r\n        await axios\r\n            .post(database, data, {\r\n                headers: headers,\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setTimeout(() => {\r\n                    deleteItem(name, location, false);\r\n                }, 1000);\r\n            });\r\n    };\r\n\r\n    const addItem = async (name: string, location: string, firstTry: boolean) => {\r\n        const data = new FormData();\r\n        data.append(\"pass\", pass);\r\n        data.append(\r\n            \"query\",\r\n            `INSERT INTO new_shopping (name, location, completed, listcode) VALUES (\"${name}\", \"${location}\", 0, \"${code}\")`\r\n        );\r\n\r\n        if (firstTry) {\r\n            setShoppingList((shoppingList) => [\r\n                ...shoppingList,\r\n                { id: \"UNKNOWN\", name: `${name}`, location: `${location}`, completed: \"0\", listcode: `${code}` },\r\n            ]);\r\n        }\r\n\r\n        await axios\r\n            .post(database, data, {\r\n                headers: headers,\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setTimeout(() => {\r\n                    addItem(name, location, false);\r\n                }, 1000);\r\n            });\r\n    };\r\n\r\n    const changeName = async (name: string, location: string, newName: string, firstTry: boolean) => {\r\n        const data = new FormData();\r\n        data.append(\"pass\", pass);\r\n        data.append(\r\n            \"query\",\r\n            `UPDATE new_shopping SET name = \"${newName}\" WHERE name = \"${name}\" AND location = \"${location}\" AND listcode = \"${code}\"`\r\n        );\r\n\r\n        if (firstTry) {\r\n            setShoppingList(\r\n                shoppingList.map((item) => {\r\n                    return item.name === name && item.location === location\r\n                        ? { id: item.id, name: newName, location: item.location, completed: item.completed }\r\n                        : item;\r\n                })\r\n            );\r\n        }\r\n\r\n        await axios\r\n            .post(database, data, {\r\n                headers: headers,\r\n            })\r\n            .then(function (response) {\r\n                // console.log(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setTimeout(() => {\r\n                    changeName(name, location, newName, false);\r\n                }, 1000);\r\n            });\r\n    };\r\n\r\n    const handleCodeSubmit = (newCode: string) => {\r\n        setCode(newCode);\r\n        fetchItems(newCode);\r\n    };\r\n\r\n    const handleRefresh = () => {\r\n        fetchItems(code);\r\n    };\r\n\r\n    return (\r\n        <Grid className={classes.root} container justifyContent=\"center\" direction=\"column\" alignItems=\"center\">\r\n            <Grid className={classes.second} container justifyContent=\"center\" direction=\"column\" alignItems=\"center\">\r\n                {code ? (\r\n                    <>\r\n                        <AddShoppingItem locations={locations} addItem={addItem} handleRefresh={handleRefresh} />\r\n                        <hr style={{ width: \"100%\", maxWidth: 690, height: 1, backgroundColor: \"white\", border: \"none\" }} />\r\n                        {shoppingList &&\r\n                            locations.map((location) =>\r\n                                shoppingList\r\n                                    .filter((item) => item.location === location)\r\n                                    .map((item, index) => (\r\n                                        <Grid\r\n                                            className={classes.root}\r\n                                            container\r\n                                            justifyContent=\"center\"\r\n                                            direction=\"column\"\r\n                                            alignItems=\"center\"\r\n                                            key={index}\r\n                                        >\r\n                                            {index === 0 && (\r\n                                                <Typography className={classes.location} variant=\"h4\">\r\n                                                    {location}\r\n                                                </Typography>\r\n                                            )}\r\n\r\n                                            <ShoppingItem\r\n                                                index={index}\r\n                                                name={item.name}\r\n                                                location={item.location}\r\n                                                completed={item.completed}\r\n                                                toggleComplete={toggleComplete}\r\n                                                deleteItem={deleteItem}\r\n                                                changeName={changeName}\r\n                                            />\r\n                                        </Grid>\r\n                                    ))\r\n                            )}\r\n                    </>\r\n                ) : (\r\n                    <ShoppingCode handleCodeSubmit={handleCodeSubmit} />\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import Navbar from \"./components/Navbar/Navbar\";\r\nimport ProjectContainer from \"./components/ProjectContainer/ProjectContainer\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport GameOfLife from \"./components/GameOfLife/GameOfLife\";\r\nimport ShoppingList from \"./components/ShoppingList/ShoppingList\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Router>\r\n            <Box display=\"flex\" flexDirection=\"column\" minHeight=\"100vh\">\r\n                <Navbar />\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <ProjectContainer />\r\n                    </Route>\r\n                    <Route path=\"/shopping\">\r\n                        <ShoppingList />\r\n                    </Route>\r\n                    <Route path=\"/gameoflife\">\r\n                        <GameOfLife />\r\n                    </Route>\r\n                </Switch>\r\n\r\n                <Footer />\r\n            </Box>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n   /* roboto-300 - latin */\r\n//   @font-face {\r\n//     font-family: 'Roboto';\r\n//     font-style: normal;\r\n//     font-weight: 300;\r\n//     src: url('../fonts/roboto-v27-latin-300.eot'); /* IE9 Compat Modes */\r\n//     src: local(''),\r\n//          url('../fonts/roboto-v27-latin-300.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n//          url('../fonts/roboto-v27-latin-300.woff2') format('woff2'), /* Super Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.woff') format('woff'), /* Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.ttf') format('truetype'), /* Safari, Android, iOS */\r\n//          url('../fonts/roboto-v27-latin-300.svg#Roboto') format('svg'); /* Legacy iOS */\r\n//   }\r\n\r\n   *{\r\n        margin: 0;\r\n        padding: 0;\r\n        -moz-box-sizing: border-box;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        font-family: \"Roboto\", sans-serif;\r\n   }\r\n\r\n   /* This is here to make my eyes hurt less at night */\r\n   body{\r\n      background-color: #292929;\r\n   }\r\n\r\n   /* html {\r\n        font-size: 62.5%;\r\n   } */\r\n   `;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#c62828\",\r\n        },\r\n        secondary: {\r\n            main: \"#ff9800\",\r\n        },\r\n        background: {\r\n            default: \"#00ff00\",\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <GlobalStyle />\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}