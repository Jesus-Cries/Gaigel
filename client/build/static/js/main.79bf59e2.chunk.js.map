{"version":3,"sources":["components/Gaigel/Header.tsx","components/Gaigel/LandingPage.tsx","components/Gaigel/Talon.tsx","components/Gaigel/GaigelCard.tsx","components/Gaigel/TrumpCard.tsx","components/Gaigel/PlayedCards.tsx","components/Gaigel/YourCards.tsx","components/Gaigel/Opening.tsx","components/Gaigel/LobbyPage.tsx","components/Gaigel/PlayerList.tsx","components/Gaigel/GameInformation.tsx","components/Gaigel/Popup.tsx","components/Gaigel/EndPopup.tsx","components/Gaigel/Actions.tsx","components/Gaigel/OpeningInstructions.tsx","components/Gaigel/Gaigel.tsx","App.tsx","GlobalStyle.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","breakpoints","up","marginLeft","marginRight","gap","logo","width","Header","classes","useTheme","matches","useMediaQuery","Box","className","src","Typography","align","variant","style","fontWeight","down","maxWidth","textField","backgroundColor","borderRadius","LandingPage","login","useState","username","setUsername","lobbycode","setLobbycode","handleLogin","useEffect","listener","event","code","document","addEventListener","removeEventListener","TextField","color","autoFocus","label","onChange","target","value","inputProps","maxLength","helperText","Button","onClick","display","flexDirection","alignItems","cardActionArea","height","paper","counter","header","Talon","cardsLeft","drawCard","Grid","item","Paper","CardActionArea","alt","card","symbolRow","justifyContent","alignContent","GaigelCard","type","clickable","playCard","hidden","symbolMap","iconSize","pointerEvents","TrumpCard","trumpCard","PlayedCards","playedCards","playerCount","opening","i","Array","fill","cards","setCards","tempCards","slice","length","push","container","spacing","map","YourCards","userCards","filledUserCards","q","splice","currentClickable","flex","textAlign","headerBox","instructions","position","buttonContainer","button","fontSize","Opening","GeElfen","AndereAlteHat","HÃ¶herHat","AufDissle","handleClick","hover","opacity","IconButton","size","padding","boxShadow","control","playerList","marginTop","marginBottom","playerInformation","lighterFontWeight","readyInformation","readyButton","LobbyPage","backToLogin","amountReadyPlayers","getReady","player","winString","wins","key","Math","random","minWidth","flexWrap","name","paddingTop","paddingBottom","PlayerList","order","playerWithTurn","index","turn","socketId","border","element","score","GameInformation","alert","Popup","snackbarType","detail","reset","message","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","transitionDuration","Alert","severity","zIndex","top","left","transform","rankingHeaderContainer","rankingHeader","rankingContainer","rankingElement","rankingElementText","footer","EndPopup","endInformation","backToLobby","losingPlayer","aufDissle","showRanking","setShowRanking","setCounter","finalSorting","setFinalSorting","sortedByScore","sort","player1","player2","sortedByWins","toggleShowRanking","decreaseCounter","newCounter","setTimeout","Card","floor","startIcon","noWrap","Actions","canCall","announcing","melden","canSteal","rauben","background","buttons","OpeningInstructions","currentPage","setCurrentPage","paddingLeft","paddingRight","openingInstructions","talonAndTrump","Gaigel","loggedIn","setLoggedIn","gameStarted","setGameStarted","ownUsername","setOwnUsername","setScore","lobbyInformation","setLobbyInformation","setOrder","setPlayerWithTurn","setOpening","currentOpening","setCurrentOpening","setResponse","socket","setSocket","setCanCall","setAnnouncing","setCanSteal","showEndPopup","setShowEndPopup","setEndInformation","talonCards","setTalonCards","setTrumpCard","setPlayedCards","yourCards","setYourCards","warningType","setWarningType","infoType","setInfoType","clickedOpening","setClickedOpening","lostAufDissle","setLostAufDissle","setLosingPlayer","console","log","newSocket","socketIOClient","on","data","close","emit","filter","playedCard","reason","App","GlobalStyle","createGlobalStyle","createTheme","palette","primary","main","secondary","default","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.79bf59e2.chunk.js","sourcesContent":["import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                marginLeft: 120,\r\n                marginRight: 120,\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                gap: \"30px\",\r\n            },\r\n\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n        },\r\n        logo: {\r\n            width: \"50px\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: \"60px\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {}\r\n\r\nconst Header: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <img src={\"/Header_symbols.png\"} className={classes.logo} />\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h3\" : \"h4\"}\r\n                    style={{ fontWeight: \"lighter\" }}\r\n                >\r\n                    Gaigel\r\n                </Typography>\r\n                <img src={\"/Header_symbols_mirror.png\"} className={classes.logo} />\r\n            </Box>\r\n\r\n            <hr style={{ width: \"100%\" }} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { Button, TextField, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                maxWidth: \"420px\",\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                maxWidth: \"800px\",\r\n            },\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            backgroundColor: \"#ffffff\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"20px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        textField: {\r\n            width: \"100%\",\r\n            backgroundColor: \"#ffffff\",\r\n            borderRadius: 4,\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    login: (username: string, lobbycode: string) => void;\r\n}\r\n\r\nconst LandingPage: React.FC<Props> = ({ login }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [lobbycode, setLobbycode] = useState<string>(\"\");\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setUsername(event.target.value as string);\r\n    };\r\n\r\n    const handleLobbycodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setLobbycode(event.target.value as string);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        if (username !== \"\" && lobbycode !== \"\") {\r\n            login(username, lobbycode);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const listener = (event: any) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                handleLogin();\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Header />\r\n\r\n            <Typography\r\n                align=\"center\"\r\n                variant={matches ? \"h5\" : \"h6\"}\r\n                style={{ maxWidth: \"35ch\", fontWeight: \"lighter\" }}\r\n            >\r\n                Entscheide dich fÃ¼r einen Nutzernamen und tritt einer Lobby bei!\r\n            </Typography>\r\n\r\n            <TextField\r\n                className={classes.textField}\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"outlined\"\r\n                label=\"Nutzername\"\r\n                onChange={handleUsernameChange}\r\n                inputProps={{ maxLength: 10 }}\r\n            />\r\n\r\n            <TextField\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                label=\"Lobbycode\"\r\n                onChange={handleLobbycodeChange}\r\n                inputProps={{ maxLength: 10 }}\r\n                helperText=\"Tipp: Bei einem bisher nicht verwendeten Lobbycode wird automatisch eine neue Lobby\r\n                erstellt.\"\r\n            />\r\n\r\n            <Button variant=\"contained\" onClick={handleLogin} style={{ width: \"100%\" }}>\r\n                Beitreten\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Grid, Paper, CardActionArea, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        cardActionArea: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        paper: {\r\n            width: 40,\r\n            height: 60,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: 50,\r\n                height: 75,\r\n            },\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            border: \"none\",\r\n            // boxShadow: \"none\",\r\n        },\r\n        counter: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    cardsLeft: number;\r\n    drawCard: (amount: number) => void;\r\n}\r\n\r\nconst Talon: React.FC<Props> = ({ cardsLeft, drawCard }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Grid item className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Talon\r\n            </Typography>\r\n            <Paper className={classes.paper}>\r\n                <CardActionArea\r\n                    className={classes.cardActionArea}\r\n                    onClick={() => {\r\n                        drawCard(1);\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={\"/cardBacksite_noSpaceAround_n1.png\"}\r\n                        width={matches ? \"50\" : \"40\"}\r\n                        height={matches ? \"75\" : \"60\"}\r\n                        alt=\"\"\r\n                    />\r\n                </CardActionArea>\r\n            </Paper>\r\n            <Typography variant={matches ? \"body1\" : \"subtitle2\"} className={classes.counter}>\r\n                Karten: {cardsLeft}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Talon;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Paper, Box, Typography, CardActionArea } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: 40,\r\n            height: 60,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: 50,\r\n                height: 75,\r\n            },\r\n            border: \"1px solid #ddd\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        cardActionArea: {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n        },\r\n        card: {\r\n            height: \"100%\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                height: \"95%\",\r\n            },\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        symbolRow: {\r\n            width: \"85%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    type: string;\r\n    value: string;\r\n    clickable: boolean;\r\n    playCard?: (type: string, value: string) => void;\r\n    hidden?: boolean;\r\n}\r\n\r\ninterface Hash {\r\n    [details: string]: string;\r\n}\r\n\r\nconst GaigelCard: React.FC<Props> = ({ type, value, clickable, playCard, hidden = false }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const symbolMap: Hash = {};\r\n    const iconSize = matches ? 13 : 10;\r\n    symbolMap[\"Eichel\"] = \"/Eichel.png\";\r\n    symbolMap[\"Blatt\"] = \"/Blatt.png\";\r\n    symbolMap[\"Herz\"] = \"/Herz.png\";\r\n    symbolMap[\"Schellen\"] = \"/Bollen.png\";\r\n\r\n    return (\r\n        <Paper\r\n            className={classes.root}\r\n            onClick={() => {\r\n                if (clickable && typeof playCard !== \"undefined\") playCard(type, value);\r\n            }}\r\n        >\r\n            <CardActionArea\r\n                className={classes.cardActionArea}\r\n                style={{ pointerEvents: clickable ? \"auto\" : \"none\" }}\r\n            >\r\n                {hidden && value !== \"\" ? (\r\n                    <img\r\n                        src={\"/cardBacksite_noSpaceAround_n1.png\"}\r\n                        width={matches ? \"50\" : \"40\"}\r\n                        height={matches ? \"75\" : \"60\"}\r\n                        alt=\"\"\r\n                    />\r\n                ) : (\r\n                    value !== \"\" && (\r\n                        <Box className={classes.card}>\r\n                            <Box className={classes.symbolRow}>\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                            </Box>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                align=\"center\"\r\n                                style={{ fontWeight: \"lighter\" }}\r\n                            >\r\n                                {value}\r\n                            </Typography>\r\n                            <Box className={classes.symbolRow}>\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                                <img\r\n                                    src={symbolMap[type]}\r\n                                    width={iconSize}\r\n                                    height={iconSize}\r\n                                    alt=\"\"\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    )\r\n                )}\r\n            </CardActionArea>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default GaigelCard;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    trumpCard: CardProps;\r\n}\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\nconst TrumpCard: React.FC<Props> = ({ trumpCard }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    let emptyChar: string = \"â \";\r\n\r\n    return (\r\n        <Grid className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Trumpf\r\n            </Typography>\r\n            <GaigelCard type={trumpCard.type} value={trumpCard.value} clickable={false} />\r\n            <Typography variant={matches ? \"body1\" : \"subtitle2\"}>{emptyChar}</Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default TrumpCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Grid, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    playedCards: CardProps[];\r\n    playerCount: number;\r\n    opening: string;\r\n}\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\nconst PlayedCards: React.FC<Props> = ({ playedCards, playerCount, opening }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    let i: number = 0;\r\n    let hidden: boolean = opening === \"AndereAlteHat\" || opening === \"HÃ¶herHat\";\r\n\r\n    const [cards, setCards] = useState<CardProps[]>(\r\n        new Array(playerCount).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    useEffect(() => {\r\n        let tempCards: CardProps[] = playedCards.slice();\r\n        for (let i = playedCards.length; i < playerCount; i++) {\r\n            tempCards.push({ type: \"\", value: \"\" });\r\n        }\r\n        setCards(tempCards);\r\n    }, [playedCards, playerCount]);\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Gespielte Karten\r\n            </Typography>\r\n\r\n            <Grid container spacing={1} justifyContent=\"center\">\r\n                {cards.map((card) => {\r\n                    i++;\r\n                    return (\r\n                        <Grid item key={i}>\r\n                            <GaigelCard\r\n                                type={card.type}\r\n                                value={card.value}\r\n                                clickable={false}\r\n                                hidden={hidden}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PlayedCards;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Grid, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport GaigelCard from \"./GaigelCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    userCards: CardProps[];\r\n    playCard: (type: string, value: string) => void;\r\n}\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\nconst YourCards: React.FC<Props> = ({ userCards, playCard }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    let i: number = 0;\r\n\r\n    let filledUserCards: CardProps[] = userCards.slice();\r\n\r\n    for (let q = filledUserCards.length; q < 5; q++) {\r\n        filledUserCards.splice(filledUserCards.length, 0, { type: \"\", value: \"\" });\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                Deine Karten\r\n            </Typography>\r\n\r\n            <Grid container spacing={1} justifyContent=\"center\">\r\n                {filledUserCards.map((card) => {\r\n                    i++;\r\n                    let currentClickable = card.type === \"\" ? false : true;\r\n                    return (\r\n                        <Grid item key={i}>\r\n                            <GaigelCard\r\n                                type={card.type}\r\n                                value={card.value}\r\n                                clickable={currentClickable}\r\n                                playCard={playCard}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default YourCards;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: \"flex-grow\",\r\n            gap: \"5px\",\r\n        },\r\n        header: {\r\n            textAlign: \"center\",\r\n            fontWeight: \"lighter\",\r\n        },\r\n        headerBox: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n            gap: \"10px\",\r\n            alignItems: \"center\",\r\n        },\r\n        instructions: {\r\n            position: \"fixed\",\r\n        },\r\n        buttonContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        button: {\r\n            fontSize: 10,\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                fontSize: 14,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    GeElfen: () => void;\r\n    AndereAlteHat: () => void;\r\n    HÃ¶herHat: () => void;\r\n    AufDissle: () => void;\r\n    handleClick: () => void;\r\n    hover: boolean;\r\n}\r\n\r\nconst Opening: React.FC<Props> = ({\r\n    GeElfen,\r\n    AndereAlteHat,\r\n    HÃ¶herHat,\r\n    AufDissle,\r\n    handleClick,\r\n    hover,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const handleAndereAlteHat = () => {\r\n        AndereAlteHat();\r\n    };\r\n\r\n    const handleGeElfen = () => {\r\n        GeElfen();\r\n    };\r\n\r\n    const handleHÃ¶herHat = () => {\r\n        HÃ¶herHat();\r\n    };\r\n\r\n    const handleAufDissle = () => {\r\n        AufDissle();\r\n    };\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.headerBox}>\r\n                <HelpOutlineIcon style={{ opacity: \"0\", width: \"50px\" }} color=\"action\" />\r\n                <Typography variant={matches ? \"h6\" : \"body1\"} className={classes.header}>\r\n                    ErÃ¶ffnung\r\n                </Typography>\r\n                <IconButton>\r\n                    <HelpOutlineIcon onClick={handleClick} color=\"action\" />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Box className={classes.buttonContainer}>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleAndereAlteHat}\r\n                >\r\n                    Andere Alte\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleGeElfen}\r\n                >\r\n                    Ge-Elfen\r\n                </Button>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleHÃ¶herHat}\r\n                >\r\n                    HÃ¶her hat\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    onClick={handleAufDissle}\r\n                >\r\n                    Auf Dissle\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Opening;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography, Button, IconButton } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Header from \"./Header\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: \"420px\",\r\n            padding: 25,\r\n            borderRadius: 10,\r\n            backgroundColor: \"#ffffff\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            gap: \"20px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        control: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        playerList: {\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            gap: \"10px\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                gap: \"15px\",\r\n            },\r\n        },\r\n        playerInformation: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        lighterFontWeight: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        readyInformation: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        readyButton: {\r\n            width: \"40%\",\r\n        },\r\n    })\r\n);\r\ninterface PlayerProps {\r\n    username: string;\r\n    wins: number;\r\n}\r\ninterface Props {\r\n    backToLogin: () => void;\r\n    lobbycode: string;\r\n    playerInformation: PlayerProps[];\r\n    amountReadyPlayers: number;\r\n    getReady: () => void;\r\n}\r\n\r\nconst LobbyPage: React.FC<Props> = ({\r\n    backToLogin,\r\n    lobbycode,\r\n    playerInformation,\r\n    amountReadyPlayers,\r\n    getReady,\r\n}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Header />\r\n\r\n            <Box className={classes.control}>\r\n                <IconButton onClick={backToLogin}>\r\n                    <ArrowBackIcon fontSize={matches ? \"large\" : \"medium\"} />\r\n                </IconButton>\r\n                <Typography\r\n                    variant={matches ? \"h6\" : \"body1\"}\r\n                    className={classes.lighterFontWeight}\r\n                >\r\n                    Lobbycode: {lobbycode}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box className={classes.playerList}>\r\n                <Typography\r\n                    align=\"center\"\r\n                    variant={matches ? \"h5\" : \"h6\"}\r\n                    style={{ fontWeight: \"lighter\" }}\r\n                >\r\n                    Spielerliste\r\n                </Typography>\r\n                {playerInformation.map((player) => {\r\n                    let winString;\r\n                    if (player.wins === 1) winString = \"Sieg\";\r\n                    else winString = \"Siege\";\r\n                    let key = Math.random();\r\n                    return (\r\n                        <Box className={classes.playerInformation} key={key}>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                className={classes.lighterFontWeight}\r\n                            >\r\n                                {player.username}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant={matches ? \"h6\" : \"body1\"}\r\n                                className={classes.lighterFontWeight}\r\n                                style={{ marginLeft: 10 }}\r\n                            >\r\n                                {player.wins} {winString}\r\n                            </Typography>\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Box>\r\n\r\n            <Box className={classes.readyInformation}>\r\n                <Typography\r\n                    variant={matches ? \"h6\" : \"body1\"}\r\n                    className={classes.lighterFontWeight}\r\n                >\r\n                    Bereit: {amountReadyPlayers} / {playerInformation.length}\r\n                </Typography>\r\n                <Button className={classes.readyButton} variant=\"contained\" onClick={getReady}>\r\n                    Bereit\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LobbyPage;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            minWidth: \"250px\",\r\n            maxWidth: \"500px\",\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        name: {\r\n            padding: 5,\r\n            paddingTop: 2,\r\n            paddingBottom: 2,\r\n            borderRadius: 8,\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface PlayerProps {\r\n    username: string;\r\n    socketId: string;\r\n}\r\ninterface Props {\r\n    order: PlayerProps[];\r\n    playerWithTurn: PlayerProps;\r\n}\r\n\r\nconst PlayerList: React.FC<Props> = ({ order, playerWithTurn }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {order.map((player, index) => {\r\n                let turn = player.socketId === playerWithTurn.socketId;\r\n                return (\r\n                    <>\r\n                        <Typography\r\n                            variant={matches ? \"body1\" : \"body2\"}\r\n                            className={classes.name}\r\n                            style={{ border: turn ? \"2px solid #ffe600\" : \"none\" }}\r\n                            key={player.socketId}\r\n                        >\r\n                            {index + 1}. {player.username}\r\n                        </Typography>\r\n                    </>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"10px\",\r\n        },\r\n        element: {\r\n            fontWeight: \"lighter\",\r\n            width: \"50%\",\r\n        },\r\n        score: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n    })\r\n);\r\ninterface Props {\r\n    username: string;\r\n    lobbycode: string;\r\n    score: number;\r\n}\r\n\r\nconst GameInformation: React.FC<Props> = ({ username, lobbycode, score }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Typography variant={matches ? \"h6\" : \"subtitle2\"} className={classes.element}>\r\n                {username}\r\n            </Typography>\r\n            <Typography variant={matches ? \"h5\" : \"h6\"} className={classes.score}>\r\n                {score}\r\n            </Typography>\r\n            <Typography\r\n                variant={matches ? \"h6\" : \"subtitle2\"}\r\n                className={classes.element}\r\n                align=\"right\"\r\n            >\r\n                {lobbycode}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GameInformation;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {},\r\n        alert: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                fontSize: \"16px\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    snackbarType: string;\r\n    type: string;\r\n    detail: string;\r\n    reset: () => void;\r\n}\r\n\r\nconst Popup: React.FC<Props> = ({ snackbarType, type, detail, reset }) => {\r\n    const classes = useStyles();\r\n    let message = \"\";\r\n\r\n    switch (type) {\r\n        // -------- Warnings --------\r\n        case \"gameOngoing\":\r\n            message =\r\n                \"Dieser Lobby kann nicht beigetreten werden, da das Spiel bereits im vollen Gange ist.\";\r\n            break;\r\n        case \"falsePlayercount\":\r\n            message =\r\n                \"Mit dieser Anzahl an Spielern lÃ¤sst sich kein Spiel starten. FÃ¼r ein Spiel werden 2, 3, 4 oder 6 Spieler benÃ¶tigt.\";\r\n            break;\r\n        case \"notYourTurn\":\r\n            message = \"Sie sind nicht an der Reihe und kÃ¶nnen daher jetzt keine Karte spielen.\";\r\n            break;\r\n        case \"noOpeningChosen\":\r\n            message = \"Sie mÃ¼ssen eine ErÃ¶ffnung auswÃ¤hlen, bevor Sie eine Karte spielen kÃ¶nnen.\";\r\n            break;\r\n        case \"noAce\":\r\n            message = \"Sie haben kein Ass. Sie kÃ¶nnen dieses Opening nicht spielen.\";\r\n            break;\r\n        case \"noAceButAceOpening\":\r\n            message =\r\n                \"Sie haben eine ErÃ¶ffnung gewÃ¤hlt, bei welcher als erste Karte ein Ass gespielt werden muss.\";\r\n            break;\r\n        case \"aceOrTrumpInHÃ¶herHat\":\r\n            message =\r\n                \"Sie haben eine ErÃ¶ffnung gewÃ¤hlt, bei welcher kein Ass und kein Trumpf als erste Karte gespielt werden darf.\";\r\n            break;\r\n        case \"hÃ¶herHatNotPossible\":\r\n            message =\r\n                \"Sie kÃ¶nnen diese ErÃ¶ffnung nicht spielen, da sie keine Karte haben, die weder Trumpf noch ein Ass ist.\";\r\n            break;\r\n        case \"waitForCards\":\r\n            message = \"Sie mÃ¼ssen warten, bis neue Karten ausgeteilt wurden.\";\r\n            break;\r\n        case \"lobbyFull\":\r\n            message = \"Diese Lobby hat bereits die maximale Spieleranzahl von 6 Spielern erreicht.\";\r\n            break;\r\n        // -------- Infos --------\r\n        case \"somebodyWonTheStich\":\r\n            message = `${detail} hat den Stich gewonnen.`;\r\n            break;\r\n        case \"somebodyWonTheGame\":\r\n            message = `${detail} hat das Spiel gewonnen.`;\r\n            break;\r\n        case \"newCards\":\r\n            message = \"Es wurden neue Karten ausgeteilt.\";\r\n            break;\r\n        case \"playerLeft\":\r\n            message = `${detail} hat das Spiel verlassen. Die Lobby wird in 5 Sekunden geschlossen.`;\r\n            break;\r\n        case \"meldenNotCurrentlyPlaying\":\r\n            message = `Sie kÃ¶nnen nur melden, wenn Sie die Runde beginnen.`;\r\n            break;\r\n        case \"hatGemeldet\":\r\n            message = `${detail} hat gemeldet.`;\r\n            break;\r\n        case \"hasToServe\":\r\n            message = `Sie mÃ¼ssen eine Karte in der selben Farbe spielen.`;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            open={type !== \"\"}\r\n            autoHideDuration={50000}\r\n            onClose={reset}\r\n            anchorOrigin={{\r\n                vertical: snackbarType === \"warning\" ? \"bottom\" : \"top\",\r\n                horizontal: \"center\",\r\n            }}\r\n            transitionDuration={0}\r\n        >\r\n            <Alert\r\n                onClose={reset}\r\n                severity={snackbarType === \"warning\" ? \"warning\" : \"info\"}\r\n                className={classes.alert}\r\n            >\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Popup;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Typography, Card, Button, IconButton } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            zIndex: 50,\r\n            maxWidth: \"450px\",\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"15px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        header: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"5px\",\r\n        },\r\n        logo: {\r\n            width: \"50px\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                width: \"70px\",\r\n            },\r\n        },\r\n        rankingHeaderContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        rankingHeader: {\r\n            textAlign: \"center\",\r\n            fontWeight: \"lighter\",\r\n        },\r\n        rankingContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"5px\",\r\n        },\r\n        rankingElement: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        rankingElementText: {\r\n            fontWeight: \"lighter\",\r\n        },\r\n        footer: {\r\n            marginTop: \"10px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            gap: \"30px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface EndPlayerInformation {\r\n    username: string;\r\n    score: number;\r\n    wins: number;\r\n}\r\n\r\ninterface Props {\r\n    endInformation: EndPlayerInformation[];\r\n    backToLobby: () => void;\r\n    aufDissle: boolean;\r\n    losingPlayer?: string;\r\n}\r\n\r\nconst EndPopup: React.FC<Props> = ({ endInformation, backToLobby, aufDissle, losingPlayer }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const [showRanking, setShowRanking] = useState<boolean>(false);\r\n    const [counter, setCounter] = useState<number>(20);\r\n    const [finalSorting, setFinalSorting] = useState<EndPlayerInformation[]>([\r\n        { username: \"\", score: 0, wins: 0 },\r\n    ]);\r\n\r\n    let sortedByScore: EndPlayerInformation[] = endInformation.slice().sort((player1, player2) => {\r\n        if (player1.score < player2.score) return 1;\r\n        if (player1.score > player2.score) return -1;\r\n        return 0;\r\n    });\r\n\r\n    let sortedByWins: EndPlayerInformation[] = endInformation.slice().sort((player1, player2) => {\r\n        if (player1.wins < player2.wins) return 1;\r\n        if (player1.wins > player2.wins) return -1;\r\n        return 0;\r\n    });\r\n\r\n    const toggleShowRanking = () => {\r\n        let newToggle: boolean = !showRanking;\r\n        setShowRanking(newToggle);\r\n    };\r\n\r\n    const decreaseCounter = (newCounter: number) => {\r\n        setCounter(newCounter);\r\n\r\n        if (newCounter > 0) {\r\n            setTimeout(() => {\r\n                decreaseCounter(newCounter - 1);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showRanking) setFinalSorting(sortedByWins);\r\n        else setFinalSorting(sortedByScore);\r\n    }, [showRanking]);\r\n\r\n    useEffect(() => {\r\n        setCounter(20);\r\n        decreaseCounter(20);\r\n    }, [endInformation]);\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Box className={classes.header}>\r\n                <img src={\"/crown.png\"} className={classes.logo} />\r\n                <Typography align=\"center\" variant={matches ? \"h4\" : \"h5\"}>\r\n                    {true\r\n                        ? `Ein ${losingPlayer} hat auf Dissle verloren!`\r\n                        : `${endInformation[0].username} hat gewonnen!`}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <hr />\r\n\r\n            <Box className={classes.rankingHeaderContainer}>\r\n                <IconButton onClick={toggleShowRanking}>\r\n                    <ArrowBackIosIcon />\r\n                </IconButton>\r\n                <Typography className={classes.rankingHeader} variant={matches ? \"h5\" : \"h6\"}>\r\n                    {showRanking ? \"Ranking\" : \"Platzierungen\"}\r\n                </Typography>\r\n                <IconButton onClick={toggleShowRanking}>\r\n                    <ArrowForwardIosIcon />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Box className={classes.rankingContainer}>\r\n                {finalSorting.map((player, index) => (\r\n                    <Box className={classes.rankingElement}>\r\n                        <Typography\r\n                            variant={matches ? \"h6\" : \"body1\"}\r\n                            className={classes.rankingElementText}\r\n                        >\r\n                            {index + 1}. {player.username}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant={matches ? \"h6\" : \"body1\"}\r\n                            className={classes.rankingElementText}\r\n                        >\r\n                            {showRanking ? player.wins : Math.floor(player.score)}{\" \"}\r\n                            {showRanking\r\n                                ? player.wins === 1\r\n                                    ? \"Sieg\"\r\n                                    : \"Siege\"\r\n                                : player.score === 1\r\n                                ? \"Punkt\"\r\n                                : \"Punkte\"}\r\n                        </Typography>\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n\r\n            <Box className={classes.footer}>\r\n                <Button startIcon={<ArrowBackIcon />} variant=\"contained\" onClick={backToLobby}>\r\n                    Lobby\r\n                </Button>\r\n                <Typography align=\"right\" noWrap={true}>\r\n                    NÃ¤chste Runde in <b>{counter}</b>\r\n                </Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EndPopup;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            gap: \"40px\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    canCall: boolean;\r\n    announcing: boolean;\r\n    melden: () => void;\r\n    canSteal: boolean;\r\n    rauben: () => void;\r\n}\r\n\r\nconst Actions: React.FC<Props> = ({ canCall, announcing, melden, canSteal, rauben }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            {canCall && (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size={matches ? \"medium\" : \"small\"}\r\n                    style={{\r\n                        background: announcing === false ? \"#e0e0e0\" : \"#ffdd1f\",\r\n                    }}\r\n                    onClick={melden}\r\n                >\r\n                    Melden\r\n                </Button>\r\n            )}\r\n\r\n            {canSteal && (\r\n                <Button variant=\"contained\" size={matches ? \"medium\" : \"small\"} onClick={rauben}>\r\n                    Rauben\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Actions;\r\n","import { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, IconButton, Typography, Card } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            zIndex: 50,\r\n            position: \"fixed\",\r\n            top: \"45%\",\r\n            left: \"50%\",\r\n            width: \"30%\",\r\n            maxWidth: \"500px\",\r\n            minWidth: \"300px\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            padding: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"15px\",\r\n            boxShadow: \"5px 5px 15px black\",\r\n        },\r\n        buttons: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n    })\r\n);\r\n\r\ninterface Props {}\r\n\r\nconst OpeningInstructions: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    let instructions: string[] = [\r\n        \"Bei dieser ErÃ¶ffnungsmÃ¶glichkeit wird ein Ass verdeckt durch die Vorhand gespielt. Alle anderen Spieler spielen nun auch verdeckt jeweils eine Karte. Der Stich gehÃ¶rt dem Spieler, der das gleiche Ass wie die Vorhand gespielt hat. Ist dies nicht der Fall, gehÃ¶rt der Stich der Vorhand.\",\r\n        \"In dieser ErÃ¶ffnungsmÃ¶glichkeit wird das Ass von der Vorhand offen ausgespielt. Die anderen Spieler kÃ¶nnen nun eine beliebige Karte offen abwerfen. Der Stich geht dann an den Spielbeginner.\",\r\n        \"Bei HÃ¶her hat wird eine Karte verdeckt ausgespielt, welche weder ein Ass, noch ein Trumpf ist. Auch die anderen Spieler spielen jeweils eine verdeckte Karte aus. Der Stich geht an den Spieler, welcher eine Karte mit der gleichen Farbe, aber mit hÃ¶herem Wert gelegt hat. Wird keine Karte der gleichen Farbe mit hÃ¶herem Wert gelegt, so geht der Stich an die Vorhand.\",\r\n        \"Eine weitere ErÃ¶ffnungsmÃ¶glichkeit ist Dissle. Sagt die Vorhand zu Beginn des Spiels, dass auf Dissle gespielt wird, so gewinnt die Vorhand das Spiel, falls sie im Verlauf des Spiels fÃ¼nf Siebener gleichzeitig besitzt. Die Gegner kÃ¶nnen bereits vorher das regulÃ¤re Spielende erreichen. Die Vorhand hat das Spiel verloren, wenn sie einen Stich gewinnt.\",\r\n    ];\r\n    let instructionTitles: string[] = [\"Andere Alte hat\", \"Ge-Elfen\", \"HÃ¶her hat\", \"Auf Dissle\"];\r\n\r\n    const pageDown = () => {\r\n        let newPage = currentPage - 1 < 0 ? 0 : currentPage - 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const pageUp = () => {\r\n        let newPage = currentPage + 1 > 3 ? 0 : currentPage + 1;\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Box className={classes.buttons}>\r\n                <IconButton onClick={pageDown}>\r\n                    <ArrowBackIosIcon />\r\n                </IconButton>\r\n                <Typography variant={matches ? \"h5\" : \"h6\"} style={{ fontWeight: \"lighter\" }}>\r\n                    {instructionTitles[currentPage]}\r\n                </Typography>\r\n                <IconButton onClick={pageUp}>\r\n                    <ArrowForwardIosIcon />\r\n                </IconButton>\r\n            </Box>\r\n\r\n            <Typography variant={matches ? \"body1\" : \"caption\"}>\r\n                {instructions[currentPage]}\r\n            </Typography>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default OpeningInstructions;\r\n","// MARK: Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { makeStyles, Theme, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport LandingPage from \"./LandingPage\";\r\nimport Talon from \"./Talon\";\r\nimport TrumpCard from \"./TrumpCard\";\r\nimport PlayedCards from \"./PlayedCards\";\r\nimport YourCards from \"./YourCards\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport Opening from \"./Opening\";\r\nimport LobbyPage from \"./LobbyPage\";\r\nimport PlayerList from \"./PlayerList\";\r\nimport GameInformation from \"./GameInformation\";\r\nimport Popup from \"./Popup\";\r\nimport EndPopup from \"./EndPopup\";\r\nimport Header from \"./Header\";\r\nimport Actions from \"./Actions\";\r\nimport OpeningInstructions from \"./OpeningInstructions\";\r\n\r\n// MARK: Styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            height: \"100vh\",\r\n            padding: 10,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            borderRadius: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\",\r\n            alignContent: \"space-around\",\r\n            alignItems: \"center\",\r\n        },\r\n        openingInstructions: {},\r\n        talonAndTrump: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n    })\r\n);\r\ninterface Props {}\r\n\r\ninterface CardProps {\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface PlayerProps {\r\n    username: string;\r\n    socketId: string;\r\n}\r\n\r\ninterface LobbyInformation {\r\n    lobbycode: string;\r\n    amountReadyPlayers: number;\r\n    playerInformation: [\r\n        {\r\n            username: string;\r\n            wins: number;\r\n        }\r\n    ];\r\n}\r\n\r\ninterface WarningInfoProps {\r\n    type: string;\r\n    detail: string;\r\n}\r\n\r\ninterface EndPlayerInformation {\r\n    username: string;\r\n    score: number;\r\n    wins: number;\r\n}\r\n\r\nconst Gaigel: React.FC<Props> = () => {\r\n    // MARK: States\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    // Boolean for deciding on whether to show the landing page or the lobby\r\n    const [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n\r\n    // Boolean for deciding on whether to show the lobby page or the game\r\n    const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n\r\n    const [ownUsername, setOwnUsername] = useState<string>(\"\");\r\n\r\n    const [score, setScore] = useState<number>(0);\r\n\r\n    // All needed information about the joined lobby\r\n    const [lobbyInformation, setLobbyInformation] = useState<LobbyInformation>({\r\n        lobbycode: \"\",\r\n        amountReadyPlayers: 0,\r\n        playerInformation: [{ username: \"\", wins: 0 }],\r\n    });\r\n\r\n    const [order, setOrder] = useState<PlayerProps[]>([]);\r\n    const [playerWithTurn, setPlayerWithTurn] = useState<PlayerProps>({\r\n        username: \"\",\r\n        socketId: \"\",\r\n    });\r\n\r\n    const [opening, setOpening] = useState<boolean>(false);\r\n\r\n    const [currentOpening, setCurrentOpening] = useState<string>(\"\");\r\n\r\n    // Latest response from server (For debugging purposes)\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    // Determines if the player can call (Melden)\r\n    const [canCall, setCanCall] = useState<boolean>(false);\r\n\r\n    const [announcing, setAnnouncing] = useState<boolean>(false);\r\n\r\n    // Determines if the player can steal (Rauben)\r\n    const [canSteal, setCanSteal] = useState<boolean>(false);\r\n\r\n    const [showEndPopup, setShowEndPopup] = useState<boolean>(false);\r\n\r\n    const [endInformation, setEndInformation] = useState<EndPlayerInformation[]>([\r\n        { username: \"\", score: 0, wins: 0 },\r\n    ]);\r\n\r\n    // The cards that can still be drawn from the talon\r\n    const [talonCards, setTalonCards] = useState<CardProps[]>(\r\n        new Array(0).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    // The trump card\r\n    const [trumpCard, setTrumpCard] = useState<CardProps>({ type: \"\", value: \"\" });\r\n\r\n    // The cards that are currently being played\r\n    const [playedCards, setPlayedCards] = useState<CardProps[]>([]);\r\n\r\n    // The cards that the user currently has\r\n    const [yourCards, setYourCards] = useState<CardProps[]>(\r\n        new Array(5).fill({ type: \"\", value: \"\" })\r\n    );\r\n\r\n    const [warningType, setWarningType] = useState<WarningInfoProps>({ type: \"\", detail: \"\" });\r\n    const [infoType, setInfoType] = useState<WarningInfoProps>({ type: \"\", detail: \"\" });\r\n\r\n    const [clickedOpening, setClickedOpening] = useState<boolean>(false);\r\n\r\n    const [lostAufDissle, setLostAufDissle] = useState<boolean>(false);\r\n\r\n    const [losingPlayer, setLosingPlayer] = useState<string>(\"\");\r\n\r\n    const onClickOpening = () => {\r\n        setClickedOpening(!clickedOpening);\r\n    };\r\n\r\n    const resetWarning = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setWarningType({ type: \"\", detail: \"\" });\r\n    };\r\n\r\n    const resetInfo = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setInfoType({ type: \"\", detail: \"\" });\r\n    };\r\n\r\n    const login = (username: string, lobbycode: string) => {\r\n        setOwnUsername(username);\r\n\r\n        // @ts-ignore\r\n        socket.emit(\"joinLobby\", { username: username, lobbycode: lobbycode });\r\n    };\r\n\r\n    const backToLogin = () => {\r\n        setLoggedIn(false);\r\n        setGameStarted(false);\r\n\r\n        // @ts-ignore\r\n        socket.emit(\"backToLogin\", \"\");\r\n    };\r\n\r\n    const backToLobby = () => {\r\n        setGameStarted(false);\r\n        // @ts-ignore\r\n        socket.emit(\"backToLobby\", \"\");\r\n    };\r\n\r\n    const getReady = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"getReady\", \"\");\r\n    };\r\n\r\n    const drawCard = () => {\r\n        console.log(\"Want to draw card\");\r\n    };\r\n\r\n    // MARK: playCard\r\n    const playCard = (type: string, value: string) => {\r\n        if (opening) {\r\n            setWarningType({ type: \"noOpeningChosen\", detail: \"\" });\r\n            return;\r\n        }\r\n\r\n        if (yourCards.length < 5 && talonCards.length > 0) {\r\n            setWarningType({ type: \"waitForCards\", detail: \"\" });\r\n            return;\r\n        }\r\n\r\n        let playedCard: CardProps = { type: type, value: value };\r\n        // @ts-ignore\r\n        socket.emit(\"playCard\", playedCard);\r\n    };\r\n\r\n    const AndereAlteHat = () => {\r\n        if (yourCards.filter((card) => card.value === \"A\").length > 0) {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"AndereAlteHat\");\r\n        } else {\r\n            setWarningType({ type: \"noAce\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const GeElfen = () => {\r\n        if (yourCards.filter((card) => card.value === \"A\").length > 0) {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"GeElfen\");\r\n        } else {\r\n            setWarningType({ type: \"noAce\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const HÃ¶herHat = () => {\r\n        let allowedCards = yourCards.filter(\r\n            (card) => trumpCard.type !== card.type && card.value !== \"A\"\r\n        );\r\n\r\n        if (allowedCards.length < 1) {\r\n            setWarningType({ type: \"hÃ¶herHatNotPossible\", detail: \"\" });\r\n        } else {\r\n            // @ts-ignore\r\n            socket.emit(\"chooseOpening\", \"HÃ¶herHat\");\r\n        }\r\n    };\r\n\r\n    const AufDissle = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"chooseOpening\", \"AufDissle\");\r\n    };\r\n\r\n    const melden = () => {\r\n        if (ownUsername === playerWithTurn.username) {\r\n            // @ts-ignore\r\n            socket.emit(\"Melden\", !announcing);\r\n            setAnnouncing(!announcing);\r\n        } else {\r\n            setWarningType({ type: \"meldenNotCurrentlyPlaying\", detail: \"\" });\r\n        }\r\n    };\r\n\r\n    const rauben = () => {\r\n        // @ts-ignore\r\n        socket.emit(\"Rauben\");\r\n    };\r\n\r\n    // MARK: useEffect\r\n    useEffect(() => {\r\n        console.log(\"UseEffect 1 was called\");\r\n        // @ts-ignore\r\n        setSocket(socket);\r\n    }, []);\r\n\r\n    // @ts-ignore\r\n    useEffect(() => {\r\n        const newSocket = socketIOClient(\"http://127.0.0.1:5000\");\r\n        // @ts-ignore\r\n        setSocket(newSocket);\r\n\r\n        newSocket.on(\"onConnect\", (data: string) => {\r\n            setResponse(data);\r\n        });\r\n\r\n        newSocket.on(\"setLoggedIn\", (data: boolean) => {\r\n            setLoggedIn(data);\r\n        });\r\n\r\n        newSocket.on(\"lobbyInformation\", (data: LobbyInformation) => {\r\n            setLobbyInformation(data);\r\n        });\r\n\r\n        newSocket.on(\"setOrder\", (data: PlayerProps[]) => {\r\n            setOrder(data);\r\n        });\r\n\r\n        newSocket.on(\"setPlayerWithTurn\", (data: PlayerProps) => {\r\n            setPlayerWithTurn(data);\r\n        });\r\n\r\n        newSocket.on(\"setInfoType\", (data: WarningInfoProps) => {\r\n            setInfoType(data);\r\n        });\r\n\r\n        newSocket.on(\"setWarningType\", (data: WarningInfoProps) => {\r\n            setWarningType(data);\r\n        });\r\n\r\n        newSocket.on(\"setScore\", (data: number) => {\r\n            setScore(data);\r\n        });\r\n\r\n        newSocket.on(\"setGameStarted\", (data: boolean) => {\r\n            setGameStarted(data);\r\n            console.log(\"Game state: \" + data);\r\n        });\r\n\r\n        newSocket.on(\"setTalon\", (data: CardProps[]) => {\r\n            setTalonCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setTrumpCard\", (data: CardProps) => {\r\n            setTrumpCard(data);\r\n        });\r\n\r\n        newSocket.on(\"setYourCards\", (data: CardProps[]) => {\r\n            setYourCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setPlayedCards\", (data: CardProps[]) => {\r\n            setPlayedCards(data);\r\n        });\r\n\r\n        newSocket.on(\"setOpening\", (data: boolean) => {\r\n            setOpening(data);\r\n        });\r\n\r\n        newSocket.on(\"setCurrentOpening\", (data: string) => {\r\n            setCurrentOpening(data);\r\n        });\r\n\r\n        newSocket.on(\"canCall\", (data: boolean) => {\r\n            setCanCall(data);\r\n        });\r\n\r\n        newSocket.on(\"canSteal\", (data: boolean) => {\r\n            setCanSteal(data);\r\n        });\r\n\r\n        newSocket.on(\"setShowEndPopup\", (data: boolean) => {\r\n            setShowEndPopup(data);\r\n        });\r\n\r\n        newSocket.on(\"setEndInformation\", (data: EndPlayerInformation[]) => {\r\n            setEndInformation(data);\r\n        });\r\n\r\n        newSocket.on(\"lostAufDissle\", (data: string) => {\r\n            setLostAufDissle(true);\r\n            setLosingPlayer(data);\r\n        });\r\n\r\n        return () => newSocket.close();\r\n    }, [setSocket]);\r\n\r\n    // MARK: Return\r\n    // @ts-ignore\r\n    return (\r\n        <Box\r\n            className={classes.root}\r\n            style={{\r\n                backgroundColor: loggedIn && gameStarted ? \"#ffffff\" : \"none\",\r\n                boxShadow: !loggedIn || !gameStarted ? \"none\" : \"5px 5px 15px black\",\r\n            }}\r\n        >\r\n            {!loggedIn ? (\r\n                <LandingPage login={login} />\r\n            ) : !gameStarted ? (\r\n                <LobbyPage\r\n                    backToLogin={backToLogin}\r\n                    lobbycode={lobbyInformation.lobbycode}\r\n                    playerInformation={lobbyInformation.playerInformation}\r\n                    amountReadyPlayers={lobbyInformation.amountReadyPlayers}\r\n                    getReady={getReady}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <Header />\r\n                    <GameInformation\r\n                        username={ownUsername}\r\n                        lobbycode={lobbyInformation.lobbycode}\r\n                        score={score}\r\n                    />\r\n                    <PlayerList order={order} playerWithTurn={playerWithTurn} />\r\n                    <hr style={{ width: \"100%\" }} />\r\n                    <Box className={classes.talonAndTrump}>\r\n                        <Talon cardsLeft={talonCards.length} drawCard={drawCard} />\r\n                        <TrumpCard trumpCard={trumpCard} />\r\n                    </Box>\r\n\r\n                    <PlayedCards\r\n                        playedCards={playedCards}\r\n                        playerCount={lobbyInformation.playerInformation.length}\r\n                        opening={currentOpening}\r\n                    />\r\n\r\n                    <hr style={{ width: \"100%\" }} />\r\n\r\n                    {clickedOpening && <OpeningInstructions />}\r\n\r\n                    {showEndPopup && (\r\n                        <EndPopup\r\n                            aufDissle={lostAufDissle}\r\n                            endInformation={endInformation}\r\n                            backToLobby={backToLobby}\r\n                            losingPlayer={losingPlayer}\r\n                        />\r\n                    )}\r\n\r\n                    {(!canCall || canSteal) && (\r\n                        <Actions\r\n                            canCall={!canCall}\r\n                            announcing={announcing}\r\n                            melden={melden}\r\n                            canSteal={!canSteal}\r\n                            rauben={rauben}\r\n                        />\r\n                    )}\r\n\r\n                    {opening && (\r\n                        <Opening\r\n                            AndereAlteHat={AndereAlteHat}\r\n                            GeElfen={GeElfen}\r\n                            HÃ¶herHat={HÃ¶herHat}\r\n                            AufDissle={AufDissle}\r\n                            handleClick={onClickOpening}\r\n                            hover={clickedOpening}\r\n                        />\r\n                    )}\r\n\r\n                    <YourCards userCards={yourCards} playCard={playCard} />\r\n                </>\r\n            )}\r\n            <Popup\r\n                snackbarType=\"info\"\r\n                type={infoType.type}\r\n                detail={infoType.detail}\r\n                reset={resetInfo}\r\n            />\r\n            <Popup\r\n                snackbarType=\"warning\"\r\n                type={warningType.type}\r\n                detail={warningType.detail}\r\n                reset={resetWarning}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Gaigel;\r\n","import Box from \"@material-ui/core/Box\";\r\n\r\nimport Gaigel from \"./components/Gaigel/Gaigel\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Box>\r\n            <Gaigel />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n   /* roboto-300 - latin */\r\n//   @font-face {\r\n//     font-family: 'Roboto';\r\n//     font-style: normal;\r\n//     font-weight: 300;\r\n//     src: url('../fonts/roboto-v27-latin-300.eot'); /* IE9 Compat Modes */\r\n//     src: local(''),\r\n//          url('../fonts/roboto-v27-latin-300.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n//          url('../fonts/roboto-v27-latin-300.woff2') format('woff2'), /* Super Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.woff') format('woff'), /* Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.ttf') format('truetype'), /* Safari, Android, iOS */\r\n//          url('../fonts/roboto-v27-latin-300.svg#Roboto') format('svg'); /* Legacy iOS */\r\n//   }\r\n\r\n   *{\r\n        margin: 0;\r\n        padding: 0;\r\n        -moz-box-sizing: border-box;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        font-family: \"Roboto\", sans-serif;\r\n   }\r\n\r\n   /* This is here to make my eyes hurt less at night */\r\n   body {\r\n      background-color: #313131;\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      background-image: url(\"/greenBackground.png\");\r\n      background-size: cover;\r\n      background-position: center;\r\n   }\r\n\r\n   html {\r\n        /* font-size: 62.5%; */\r\n   }\r\n   `;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#c62828\",\r\n        },\r\n        secondary: {\r\n            main: \"#ff9800\",\r\n        },\r\n        background: {\r\n            default: \"#00ff00\",\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <GlobalStyle />\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}